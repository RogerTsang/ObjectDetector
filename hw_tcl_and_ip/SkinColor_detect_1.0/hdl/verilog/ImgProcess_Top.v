// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.4
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="ImgProcess_Top,hls_ip_2016_4,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020clg484-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=dataflow,HLS_SYN_CLOCK=9.400000,HLS_SYN_LAT=-1,HLS_SYN_TPT=-1,HLS_SYN_MEM=0,HLS_SYN_DSP=7,HLS_SYN_FF=1419,HLS_SYN_LUT=1623}" *)

module ImgProcess_Top (
        s_axi_CONTROL_BUS_AWVALID,
        s_axi_CONTROL_BUS_AWREADY,
        s_axi_CONTROL_BUS_AWADDR,
        s_axi_CONTROL_BUS_WVALID,
        s_axi_CONTROL_BUS_WREADY,
        s_axi_CONTROL_BUS_WDATA,
        s_axi_CONTROL_BUS_WSTRB,
        s_axi_CONTROL_BUS_ARVALID,
        s_axi_CONTROL_BUS_ARREADY,
        s_axi_CONTROL_BUS_ARADDR,
        s_axi_CONTROL_BUS_RVALID,
        s_axi_CONTROL_BUS_RREADY,
        s_axi_CONTROL_BUS_RDATA,
        s_axi_CONTROL_BUS_RRESP,
        s_axi_CONTROL_BUS_BVALID,
        s_axi_CONTROL_BUS_BREADY,
        s_axi_CONTROL_BUS_BRESP,
        ap_clk,
        ap_rst_n,
        interrupt,
        INPUT_STREAM_TDATA,
        INPUT_STREAM_TKEEP,
        INPUT_STREAM_TSTRB,
        INPUT_STREAM_TUSER,
        INPUT_STREAM_TLAST,
        INPUT_STREAM_TID,
        INPUT_STREAM_TDEST,
        OUTPUT_STREAM_TDATA,
        OUTPUT_STREAM_TKEEP,
        OUTPUT_STREAM_TSTRB,
        OUTPUT_STREAM_TUSER,
        OUTPUT_STREAM_TLAST,
        OUTPUT_STREAM_TID,
        OUTPUT_STREAM_TDEST,
        INPUT_STREAM_TVALID,
        INPUT_STREAM_TREADY,
        OUTPUT_STREAM_TVALID,
        OUTPUT_STREAM_TREADY
);

parameter    C_S_AXI_CONTROL_BUS_DATA_WIDTH = 32;
parameter    ap_const_int64_8 = 8;
parameter    C_S_AXI_CONTROL_BUS_ADDR_WIDTH = 7;
parameter    C_S_AXI_DATA_WIDTH = 32;
parameter    C_S_AXI_ADDR_WIDTH = 32;
parameter    ap_const_lv24_0 = 24'b000000000000000000000000;
parameter    ap_const_lv3_0 = 3'b000;
parameter    ap_const_lv2_0 = 2'b00;
parameter    ap_const_lv2_1 = 2'b1;

parameter C_S_AXI_CONTROL_BUS_WSTRB_WIDTH = (C_S_AXI_CONTROL_BUS_DATA_WIDTH / ap_const_int64_8);
parameter C_S_AXI_WSTRB_WIDTH = (C_S_AXI_DATA_WIDTH / ap_const_int64_8);

input   s_axi_CONTROL_BUS_AWVALID;
output   s_axi_CONTROL_BUS_AWREADY;
input  [C_S_AXI_CONTROL_BUS_ADDR_WIDTH - 1 : 0] s_axi_CONTROL_BUS_AWADDR;
input   s_axi_CONTROL_BUS_WVALID;
output   s_axi_CONTROL_BUS_WREADY;
input  [C_S_AXI_CONTROL_BUS_DATA_WIDTH - 1 : 0] s_axi_CONTROL_BUS_WDATA;
input  [C_S_AXI_CONTROL_BUS_WSTRB_WIDTH - 1 : 0] s_axi_CONTROL_BUS_WSTRB;
input   s_axi_CONTROL_BUS_ARVALID;
output   s_axi_CONTROL_BUS_ARREADY;
input  [C_S_AXI_CONTROL_BUS_ADDR_WIDTH - 1 : 0] s_axi_CONTROL_BUS_ARADDR;
output   s_axi_CONTROL_BUS_RVALID;
input   s_axi_CONTROL_BUS_RREADY;
output  [C_S_AXI_CONTROL_BUS_DATA_WIDTH - 1 : 0] s_axi_CONTROL_BUS_RDATA;
output  [1:0] s_axi_CONTROL_BUS_RRESP;
output   s_axi_CONTROL_BUS_BVALID;
input   s_axi_CONTROL_BUS_BREADY;
output  [1:0] s_axi_CONTROL_BUS_BRESP;
input   ap_clk;
input   ap_rst_n;
output   interrupt;
input  [23:0] INPUT_STREAM_TDATA;
input  [2:0] INPUT_STREAM_TKEEP;
input  [2:0] INPUT_STREAM_TSTRB;
input  [0:0] INPUT_STREAM_TUSER;
input  [0:0] INPUT_STREAM_TLAST;
input  [0:0] INPUT_STREAM_TID;
input  [0:0] INPUT_STREAM_TDEST;
output  [23:0] OUTPUT_STREAM_TDATA;
output  [2:0] OUTPUT_STREAM_TKEEP;
output  [2:0] OUTPUT_STREAM_TSTRB;
output  [0:0] OUTPUT_STREAM_TUSER;
output  [0:0] OUTPUT_STREAM_TLAST;
output  [0:0] OUTPUT_STREAM_TID;
output  [0:0] OUTPUT_STREAM_TDEST;
input   INPUT_STREAM_TVALID;
output   INPUT_STREAM_TREADY;
output   OUTPUT_STREAM_TVALID;
input   OUTPUT_STREAM_TREADY;

reg    ap_rst_n_inv;
wire    ap_start;
wire    ap_ready;
wire    ap_done;
wire    ap_idle;
wire   [31:0] rows;
wire   [31:0] cols;
wire   [31:0] y_lower;
wire   [31:0] y_upper;
wire   [31:0] cb_lower;
wire   [31:0] cb_upper;
wire   [31:0] cr_lower;
wire   [31:0] cr_upper;
wire    Block_Mat_exit45_pro_U0_ap_start;
wire    Block_Mat_exit45_pro_U0_ap_done;
wire    Block_Mat_exit45_pro_U0_ap_continue;
wire    Block_Mat_exit45_pro_U0_ap_idle;
wire    Block_Mat_exit45_pro_U0_ap_ready;
wire    Block_Mat_exit45_pro_U0_start_out;
wire    Block_Mat_exit45_pro_U0_start_write;
wire   [11:0] Block_Mat_exit45_pro_U0_dst_mat_rows_V_out_din;
wire    Block_Mat_exit45_pro_U0_dst_mat_rows_V_out_write;
wire   [11:0] Block_Mat_exit45_pro_U0_dst_mat_cols_V_out_din;
wire    Block_Mat_exit45_pro_U0_dst_mat_cols_V_out_write;
wire   [31:0] Block_Mat_exit45_pro_U0_y_lower_out_din;
wire    Block_Mat_exit45_pro_U0_y_lower_out_write;
wire   [31:0] Block_Mat_exit45_pro_U0_y_upper_out_din;
wire    Block_Mat_exit45_pro_U0_y_upper_out_write;
wire   [31:0] Block_Mat_exit45_pro_U0_cb_lower_out_din;
wire    Block_Mat_exit45_pro_U0_cb_lower_out_write;
wire   [31:0] Block_Mat_exit45_pro_U0_cb_upper_out_din;
wire    Block_Mat_exit45_pro_U0_cb_upper_out_write;
wire   [31:0] Block_Mat_exit45_pro_U0_cr_lower_out_din;
wire    Block_Mat_exit45_pro_U0_cr_lower_out_write;
wire   [31:0] Block_Mat_exit45_pro_U0_cr_upper_out_din;
wire    Block_Mat_exit45_pro_U0_cr_upper_out_write;
wire   [11:0] Block_Mat_exit45_pro_U0_ap_return_0;
wire   [11:0] Block_Mat_exit45_pro_U0_ap_return_1;
wire    ap_channel_done_src_mat_cols_V_chann;
wire    src_mat_cols_V_chann_full_n;
reg    ap_sync_reg_channel_write_src_mat_cols_V_chann;
wire    ap_sync_channel_write_src_mat_cols_V_chann;
wire    ap_channel_done_src_mat_rows_V_chann;
wire    src_mat_rows_V_chann_full_n;
reg    ap_sync_reg_channel_write_src_mat_rows_V_chann;
wire    ap_sync_channel_write_src_mat_rows_V_chann;
wire    AXIvideo2Mat_U0_ap_start;
wire    AXIvideo2Mat_U0_ap_done;
wire    AXIvideo2Mat_U0_ap_continue;
wire    AXIvideo2Mat_U0_ap_idle;
wire    AXIvideo2Mat_U0_ap_ready;
wire    AXIvideo2Mat_U0_INPUT_STREAM_TREADY;
wire   [7:0] AXIvideo2Mat_U0_img_data_stream_0_V_din;
wire    AXIvideo2Mat_U0_img_data_stream_0_V_write;
wire   [7:0] AXIvideo2Mat_U0_img_data_stream_1_V_din;
wire    AXIvideo2Mat_U0_img_data_stream_1_V_write;
wire   [7:0] AXIvideo2Mat_U0_img_data_stream_2_V_din;
wire    AXIvideo2Mat_U0_img_data_stream_2_V_write;
wire    ImgProcess_U0_ap_start;
wire    ImgProcess_U0_ap_done;
wire    ImgProcess_U0_ap_continue;
wire    ImgProcess_U0_ap_idle;
wire    ImgProcess_U0_ap_ready;
wire    ImgProcess_U0_p_src_data_stream_0_V_read;
wire    ImgProcess_U0_p_src_data_stream_1_V_read;
wire    ImgProcess_U0_p_src_data_stream_2_V_read;
wire   [7:0] ImgProcess_U0_p_dst_data_stream_0_V_din;
wire    ImgProcess_U0_p_dst_data_stream_0_V_write;
wire   [7:0] ImgProcess_U0_p_dst_data_stream_1_V_din;
wire    ImgProcess_U0_p_dst_data_stream_1_V_write;
wire   [7:0] ImgProcess_U0_p_dst_data_stream_2_V_din;
wire    ImgProcess_U0_p_dst_data_stream_2_V_write;
wire    ImgProcess_U0_y_lower_read;
wire    ImgProcess_U0_y_upper_read;
wire    ImgProcess_U0_cb_lower_read;
wire    ImgProcess_U0_cb_upper_read;
wire    ImgProcess_U0_cr_lower_read;
wire    ImgProcess_U0_cr_upper_read;
wire    Mat2AXIvideo_U0_ap_start;
wire    Mat2AXIvideo_U0_ap_done;
wire    Mat2AXIvideo_U0_ap_continue;
wire    Mat2AXIvideo_U0_ap_idle;
wire    Mat2AXIvideo_U0_ap_ready;
wire    Mat2AXIvideo_U0_img_rows_V_read;
wire    Mat2AXIvideo_U0_img_cols_V_read;
wire    Mat2AXIvideo_U0_img_data_stream_0_V_read;
wire    Mat2AXIvideo_U0_img_data_stream_1_V_read;
wire    Mat2AXIvideo_U0_img_data_stream_2_V_read;
wire   [23:0] Mat2AXIvideo_U0_OUTPUT_STREAM_TDATA;
wire    Mat2AXIvideo_U0_OUTPUT_STREAM_TVALID;
wire   [2:0] Mat2AXIvideo_U0_OUTPUT_STREAM_TKEEP;
wire   [2:0] Mat2AXIvideo_U0_OUTPUT_STREAM_TSTRB;
wire   [0:0] Mat2AXIvideo_U0_OUTPUT_STREAM_TUSER;
wire   [0:0] Mat2AXIvideo_U0_OUTPUT_STREAM_TLAST;
wire   [0:0] Mat2AXIvideo_U0_OUTPUT_STREAM_TID;
wire   [0:0] Mat2AXIvideo_U0_OUTPUT_STREAM_TDEST;
wire    ap_hs_continue;
wire    dst_mat_rows_V_chann_full_n;
wire   [11:0] dst_mat_rows_V_chann_dout;
wire    dst_mat_rows_V_chann_empty_n;
wire    dst_mat_cols_V_chann_full_n;
wire   [11:0] dst_mat_cols_V_chann_dout;
wire    dst_mat_cols_V_chann_empty_n;
wire    y_lower_channel_full_n;
wire   [31:0] y_lower_channel_dout;
wire    y_lower_channel_empty_n;
wire    y_upper_channel_full_n;
wire   [31:0] y_upper_channel_dout;
wire    y_upper_channel_empty_n;
wire    cb_lower_channel_full_n;
wire   [31:0] cb_lower_channel_dout;
wire    cb_lower_channel_empty_n;
wire    cb_upper_channel_full_n;
wire   [31:0] cb_upper_channel_dout;
wire    cb_upper_channel_empty_n;
wire    cr_lower_channel_full_n;
wire   [31:0] cr_lower_channel_dout;
wire    cr_lower_channel_empty_n;
wire    cr_upper_channel_full_n;
wire   [31:0] cr_upper_channel_dout;
wire    cr_upper_channel_empty_n;
wire   [11:0] src_mat_rows_V_chann_dout;
wire    src_mat_rows_V_chann_empty_n;
wire   [11:0] src_mat_cols_V_chann_dout;
wire    src_mat_cols_V_chann_empty_n;
wire    src_mat_data_stream_s_full_n;
wire   [7:0] src_mat_data_stream_s_dout;
wire    src_mat_data_stream_s_empty_n;
wire    src_mat_data_stream_1_full_n;
wire   [7:0] src_mat_data_stream_1_dout;
wire    src_mat_data_stream_1_empty_n;
wire    src_mat_data_stream_2_full_n;
wire   [7:0] src_mat_data_stream_2_dout;
wire    src_mat_data_stream_2_empty_n;
wire    dst_mat_data_stream_s_full_n;
wire   [7:0] dst_mat_data_stream_s_dout;
wire    dst_mat_data_stream_s_empty_n;
wire    dst_mat_data_stream_1_full_n;
wire   [7:0] dst_mat_data_stream_1_dout;
wire    dst_mat_data_stream_1_empty_n;
wire    dst_mat_data_stream_2_full_n;
wire   [7:0] dst_mat_data_stream_2_dout;
wire    dst_mat_data_stream_2_empty_n;
wire    ap_hs_done;
wire    ap_hs_ready;
reg    ap_sync_reg_AXIvideo2Mat_U0_ap_ready;
wire    ap_sync_AXIvideo2Mat_U0_ap_ready;
reg   [1:0] AXIvideo2Mat_U0_ap_ready_count;
reg    ap_sync_reg_Block_Mat_exit45_pro_U0_ap_ready;
wire    ap_sync_Block_Mat_exit45_pro_U0_ap_ready;
reg   [1:0] Block_Mat_exit45_pro_U0_ap_ready_count;
wire    ap_sync_AXIvideo2Mat_U0_ap_start;
wire    ap_sync_Block_Mat_exit45_pro_U0_ap_start;
wire   [0:0] start_for_ImgProcess_U0_din;
wire    start_for_ImgProcess_U0_full_n;
wire   [0:0] start_for_ImgProcess_U0_dout;
wire    start_for_ImgProcess_U0_empty_n;
wire   [0:0] start_for_Mat2AXIvideo_U0_din;
wire    start_for_Mat2AXIvideo_U0_full_n;
wire   [0:0] start_for_Mat2AXIvideo_U0_dout;
wire    start_for_Mat2AXIvideo_U0_empty_n;

// power-on initialization
initial begin
#0 ap_sync_reg_channel_write_src_mat_cols_V_chann = 1'b0;
#0 ap_sync_reg_channel_write_src_mat_rows_V_chann = 1'b0;
#0 ap_sync_reg_AXIvideo2Mat_U0_ap_ready = 1'b0;
#0 AXIvideo2Mat_U0_ap_ready_count = 2'b00;
#0 ap_sync_reg_Block_Mat_exit45_pro_U0_ap_ready = 1'b0;
#0 Block_Mat_exit45_pro_U0_ap_ready_count = 2'b00;
end

ImgProcess_Top_CONTROL_BUS_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_CONTROL_BUS_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_CONTROL_BUS_DATA_WIDTH ))
ImgProcess_Top_CONTROL_BUS_s_axi_U(
    .AWVALID(s_axi_CONTROL_BUS_AWVALID),
    .AWREADY(s_axi_CONTROL_BUS_AWREADY),
    .AWADDR(s_axi_CONTROL_BUS_AWADDR),
    .WVALID(s_axi_CONTROL_BUS_WVALID),
    .WREADY(s_axi_CONTROL_BUS_WREADY),
    .WDATA(s_axi_CONTROL_BUS_WDATA),
    .WSTRB(s_axi_CONTROL_BUS_WSTRB),
    .ARVALID(s_axi_CONTROL_BUS_ARVALID),
    .ARREADY(s_axi_CONTROL_BUS_ARREADY),
    .ARADDR(s_axi_CONTROL_BUS_ARADDR),
    .RVALID(s_axi_CONTROL_BUS_RVALID),
    .RREADY(s_axi_CONTROL_BUS_RREADY),
    .RDATA(s_axi_CONTROL_BUS_RDATA),
    .RRESP(s_axi_CONTROL_BUS_RRESP),
    .BVALID(s_axi_CONTROL_BUS_BVALID),
    .BREADY(s_axi_CONTROL_BUS_BREADY),
    .BRESP(s_axi_CONTROL_BUS_BRESP),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .ap_start(ap_start),
    .interrupt(interrupt),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_idle(ap_idle),
    .rows(rows),
    .cols(cols),
    .y_lower(y_lower),
    .y_upper(y_upper),
    .cb_lower(cb_lower),
    .cb_upper(cb_upper),
    .cr_lower(cr_lower),
    .cr_upper(cr_upper)
);

Block_Mat_exit45_pro Block_Mat_exit45_pro_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(Block_Mat_exit45_pro_U0_ap_start),
    .start_full_n(start_for_Mat2AXIvideo_U0_full_n),
    .ap_done(Block_Mat_exit45_pro_U0_ap_done),
    .ap_continue(Block_Mat_exit45_pro_U0_ap_continue),
    .ap_idle(Block_Mat_exit45_pro_U0_ap_idle),
    .ap_ready(Block_Mat_exit45_pro_U0_ap_ready),
    .start_out(Block_Mat_exit45_pro_U0_start_out),
    .start_write(Block_Mat_exit45_pro_U0_start_write),
    .rows(rows),
    .cols(cols),
    .y_lower(y_lower),
    .y_upper(y_upper),
    .cb_lower(cb_lower),
    .cb_upper(cb_upper),
    .cr_lower(cr_lower),
    .cr_upper(cr_upper),
    .dst_mat_rows_V_out_din(Block_Mat_exit45_pro_U0_dst_mat_rows_V_out_din),
    .dst_mat_rows_V_out_full_n(dst_mat_rows_V_chann_full_n),
    .dst_mat_rows_V_out_write(Block_Mat_exit45_pro_U0_dst_mat_rows_V_out_write),
    .dst_mat_cols_V_out_din(Block_Mat_exit45_pro_U0_dst_mat_cols_V_out_din),
    .dst_mat_cols_V_out_full_n(dst_mat_cols_V_chann_full_n),
    .dst_mat_cols_V_out_write(Block_Mat_exit45_pro_U0_dst_mat_cols_V_out_write),
    .y_lower_out_din(Block_Mat_exit45_pro_U0_y_lower_out_din),
    .y_lower_out_full_n(y_lower_channel_full_n),
    .y_lower_out_write(Block_Mat_exit45_pro_U0_y_lower_out_write),
    .y_upper_out_din(Block_Mat_exit45_pro_U0_y_upper_out_din),
    .y_upper_out_full_n(y_upper_channel_full_n),
    .y_upper_out_write(Block_Mat_exit45_pro_U0_y_upper_out_write),
    .cb_lower_out_din(Block_Mat_exit45_pro_U0_cb_lower_out_din),
    .cb_lower_out_full_n(cb_lower_channel_full_n),
    .cb_lower_out_write(Block_Mat_exit45_pro_U0_cb_lower_out_write),
    .cb_upper_out_din(Block_Mat_exit45_pro_U0_cb_upper_out_din),
    .cb_upper_out_full_n(cb_upper_channel_full_n),
    .cb_upper_out_write(Block_Mat_exit45_pro_U0_cb_upper_out_write),
    .cr_lower_out_din(Block_Mat_exit45_pro_U0_cr_lower_out_din),
    .cr_lower_out_full_n(cr_lower_channel_full_n),
    .cr_lower_out_write(Block_Mat_exit45_pro_U0_cr_lower_out_write),
    .cr_upper_out_din(Block_Mat_exit45_pro_U0_cr_upper_out_din),
    .cr_upper_out_full_n(cr_upper_channel_full_n),
    .cr_upper_out_write(Block_Mat_exit45_pro_U0_cr_upper_out_write),
    .ap_return_0(Block_Mat_exit45_pro_U0_ap_return_0),
    .ap_return_1(Block_Mat_exit45_pro_U0_ap_return_1)
);

AXIvideo2Mat AXIvideo2Mat_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(AXIvideo2Mat_U0_ap_start),
    .ap_done(AXIvideo2Mat_U0_ap_done),
    .ap_continue(AXIvideo2Mat_U0_ap_continue),
    .ap_idle(AXIvideo2Mat_U0_ap_idle),
    .ap_ready(AXIvideo2Mat_U0_ap_ready),
    .INPUT_STREAM_TDATA(INPUT_STREAM_TDATA),
    .INPUT_STREAM_TVALID(INPUT_STREAM_TVALID),
    .INPUT_STREAM_TREADY(AXIvideo2Mat_U0_INPUT_STREAM_TREADY),
    .INPUT_STREAM_TKEEP(INPUT_STREAM_TKEEP),
    .INPUT_STREAM_TSTRB(INPUT_STREAM_TSTRB),
    .INPUT_STREAM_TUSER(INPUT_STREAM_TUSER),
    .INPUT_STREAM_TLAST(INPUT_STREAM_TLAST),
    .INPUT_STREAM_TID(INPUT_STREAM_TID),
    .INPUT_STREAM_TDEST(INPUT_STREAM_TDEST),
    .img_rows_V_read(src_mat_rows_V_chann_dout),
    .img_cols_V_read(src_mat_cols_V_chann_dout),
    .img_data_stream_0_V_din(AXIvideo2Mat_U0_img_data_stream_0_V_din),
    .img_data_stream_0_V_full_n(src_mat_data_stream_s_full_n),
    .img_data_stream_0_V_write(AXIvideo2Mat_U0_img_data_stream_0_V_write),
    .img_data_stream_1_V_din(AXIvideo2Mat_U0_img_data_stream_1_V_din),
    .img_data_stream_1_V_full_n(src_mat_data_stream_1_full_n),
    .img_data_stream_1_V_write(AXIvideo2Mat_U0_img_data_stream_1_V_write),
    .img_data_stream_2_V_din(AXIvideo2Mat_U0_img_data_stream_2_V_din),
    .img_data_stream_2_V_full_n(src_mat_data_stream_2_full_n),
    .img_data_stream_2_V_write(AXIvideo2Mat_U0_img_data_stream_2_V_write)
);

ImgProcess ImgProcess_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(ImgProcess_U0_ap_start),
    .ap_done(ImgProcess_U0_ap_done),
    .ap_continue(ImgProcess_U0_ap_continue),
    .ap_idle(ImgProcess_U0_ap_idle),
    .ap_ready(ImgProcess_U0_ap_ready),
    .p_src_data_stream_0_V_dout(src_mat_data_stream_s_dout),
    .p_src_data_stream_0_V_empty_n(src_mat_data_stream_s_empty_n),
    .p_src_data_stream_0_V_read(ImgProcess_U0_p_src_data_stream_0_V_read),
    .p_src_data_stream_1_V_dout(src_mat_data_stream_1_dout),
    .p_src_data_stream_1_V_empty_n(src_mat_data_stream_1_empty_n),
    .p_src_data_stream_1_V_read(ImgProcess_U0_p_src_data_stream_1_V_read),
    .p_src_data_stream_2_V_dout(src_mat_data_stream_2_dout),
    .p_src_data_stream_2_V_empty_n(src_mat_data_stream_2_empty_n),
    .p_src_data_stream_2_V_read(ImgProcess_U0_p_src_data_stream_2_V_read),
    .p_dst_data_stream_0_V_din(ImgProcess_U0_p_dst_data_stream_0_V_din),
    .p_dst_data_stream_0_V_full_n(dst_mat_data_stream_s_full_n),
    .p_dst_data_stream_0_V_write(ImgProcess_U0_p_dst_data_stream_0_V_write),
    .p_dst_data_stream_1_V_din(ImgProcess_U0_p_dst_data_stream_1_V_din),
    .p_dst_data_stream_1_V_full_n(dst_mat_data_stream_1_full_n),
    .p_dst_data_stream_1_V_write(ImgProcess_U0_p_dst_data_stream_1_V_write),
    .p_dst_data_stream_2_V_din(ImgProcess_U0_p_dst_data_stream_2_V_din),
    .p_dst_data_stream_2_V_full_n(dst_mat_data_stream_2_full_n),
    .p_dst_data_stream_2_V_write(ImgProcess_U0_p_dst_data_stream_2_V_write),
    .y_lower_dout(y_lower_channel_dout),
    .y_lower_empty_n(y_lower_channel_empty_n),
    .y_lower_read(ImgProcess_U0_y_lower_read),
    .y_upper_dout(y_upper_channel_dout),
    .y_upper_empty_n(y_upper_channel_empty_n),
    .y_upper_read(ImgProcess_U0_y_upper_read),
    .cb_lower_dout(cb_lower_channel_dout),
    .cb_lower_empty_n(cb_lower_channel_empty_n),
    .cb_lower_read(ImgProcess_U0_cb_lower_read),
    .cb_upper_dout(cb_upper_channel_dout),
    .cb_upper_empty_n(cb_upper_channel_empty_n),
    .cb_upper_read(ImgProcess_U0_cb_upper_read),
    .cr_lower_dout(cr_lower_channel_dout),
    .cr_lower_empty_n(cr_lower_channel_empty_n),
    .cr_lower_read(ImgProcess_U0_cr_lower_read),
    .cr_upper_dout(cr_upper_channel_dout),
    .cr_upper_empty_n(cr_upper_channel_empty_n),
    .cr_upper_read(ImgProcess_U0_cr_upper_read)
);

Mat2AXIvideo Mat2AXIvideo_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(Mat2AXIvideo_U0_ap_start),
    .ap_done(Mat2AXIvideo_U0_ap_done),
    .ap_continue(Mat2AXIvideo_U0_ap_continue),
    .ap_idle(Mat2AXIvideo_U0_ap_idle),
    .ap_ready(Mat2AXIvideo_U0_ap_ready),
    .img_rows_V_dout(dst_mat_rows_V_chann_dout),
    .img_rows_V_empty_n(dst_mat_rows_V_chann_empty_n),
    .img_rows_V_read(Mat2AXIvideo_U0_img_rows_V_read),
    .img_cols_V_dout(dst_mat_cols_V_chann_dout),
    .img_cols_V_empty_n(dst_mat_cols_V_chann_empty_n),
    .img_cols_V_read(Mat2AXIvideo_U0_img_cols_V_read),
    .img_data_stream_0_V_dout(dst_mat_data_stream_s_dout),
    .img_data_stream_0_V_empty_n(dst_mat_data_stream_s_empty_n),
    .img_data_stream_0_V_read(Mat2AXIvideo_U0_img_data_stream_0_V_read),
    .img_data_stream_1_V_dout(dst_mat_data_stream_1_dout),
    .img_data_stream_1_V_empty_n(dst_mat_data_stream_1_empty_n),
    .img_data_stream_1_V_read(Mat2AXIvideo_U0_img_data_stream_1_V_read),
    .img_data_stream_2_V_dout(dst_mat_data_stream_2_dout),
    .img_data_stream_2_V_empty_n(dst_mat_data_stream_2_empty_n),
    .img_data_stream_2_V_read(Mat2AXIvideo_U0_img_data_stream_2_V_read),
    .OUTPUT_STREAM_TDATA(Mat2AXIvideo_U0_OUTPUT_STREAM_TDATA),
    .OUTPUT_STREAM_TVALID(Mat2AXIvideo_U0_OUTPUT_STREAM_TVALID),
    .OUTPUT_STREAM_TREADY(OUTPUT_STREAM_TREADY),
    .OUTPUT_STREAM_TKEEP(Mat2AXIvideo_U0_OUTPUT_STREAM_TKEEP),
    .OUTPUT_STREAM_TSTRB(Mat2AXIvideo_U0_OUTPUT_STREAM_TSTRB),
    .OUTPUT_STREAM_TUSER(Mat2AXIvideo_U0_OUTPUT_STREAM_TUSER),
    .OUTPUT_STREAM_TLAST(Mat2AXIvideo_U0_OUTPUT_STREAM_TLAST),
    .OUTPUT_STREAM_TID(Mat2AXIvideo_U0_OUTPUT_STREAM_TID),
    .OUTPUT_STREAM_TDEST(Mat2AXIvideo_U0_OUTPUT_STREAM_TDEST)
);

ImgProcess_Top_dsg8j dst_mat_rows_V_chann_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(Block_Mat_exit45_pro_U0_dst_mat_rows_V_out_din),
    .if_full_n(dst_mat_rows_V_chann_full_n),
    .if_write(Block_Mat_exit45_pro_U0_dst_mat_rows_V_out_write),
    .if_dout(dst_mat_rows_V_chann_dout),
    .if_empty_n(dst_mat_rows_V_chann_empty_n),
    .if_read(Mat2AXIvideo_U0_img_rows_V_read)
);

ImgProcess_Top_dshbi dst_mat_cols_V_chann_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(Block_Mat_exit45_pro_U0_dst_mat_cols_V_out_din),
    .if_full_n(dst_mat_cols_V_chann_full_n),
    .if_write(Block_Mat_exit45_pro_U0_dst_mat_cols_V_out_write),
    .if_dout(dst_mat_cols_V_chann_dout),
    .if_empty_n(dst_mat_cols_V_chann_empty_n),
    .if_read(Mat2AXIvideo_U0_img_cols_V_read)
);

ImgProcess_Top_y_ibs y_lower_channel_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(Block_Mat_exit45_pro_U0_y_lower_out_din),
    .if_full_n(y_lower_channel_full_n),
    .if_write(Block_Mat_exit45_pro_U0_y_lower_out_write),
    .if_dout(y_lower_channel_dout),
    .if_empty_n(y_lower_channel_empty_n),
    .if_read(ImgProcess_U0_y_lower_read)
);

ImgProcess_Top_y_jbC y_upper_channel_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(Block_Mat_exit45_pro_U0_y_upper_out_din),
    .if_full_n(y_upper_channel_full_n),
    .if_write(Block_Mat_exit45_pro_U0_y_upper_out_write),
    .if_dout(y_upper_channel_dout),
    .if_empty_n(y_upper_channel_empty_n),
    .if_read(ImgProcess_U0_y_upper_read)
);

ImgProcess_Top_cbkbM cb_lower_channel_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(Block_Mat_exit45_pro_U0_cb_lower_out_din),
    .if_full_n(cb_lower_channel_full_n),
    .if_write(Block_Mat_exit45_pro_U0_cb_lower_out_write),
    .if_dout(cb_lower_channel_dout),
    .if_empty_n(cb_lower_channel_empty_n),
    .if_read(ImgProcess_U0_cb_lower_read)
);

ImgProcess_Top_cblbW cb_upper_channel_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(Block_Mat_exit45_pro_U0_cb_upper_out_din),
    .if_full_n(cb_upper_channel_full_n),
    .if_write(Block_Mat_exit45_pro_U0_cb_upper_out_write),
    .if_dout(cb_upper_channel_dout),
    .if_empty_n(cb_upper_channel_empty_n),
    .if_read(ImgProcess_U0_cb_upper_read)
);

ImgProcess_Top_crmb6 cr_lower_channel_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(Block_Mat_exit45_pro_U0_cr_lower_out_din),
    .if_full_n(cr_lower_channel_full_n),
    .if_write(Block_Mat_exit45_pro_U0_cr_lower_out_write),
    .if_dout(cr_lower_channel_dout),
    .if_empty_n(cr_lower_channel_empty_n),
    .if_read(ImgProcess_U0_cr_lower_read)
);

ImgProcess_Top_crncg cr_upper_channel_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(Block_Mat_exit45_pro_U0_cr_upper_out_din),
    .if_full_n(cr_upper_channel_full_n),
    .if_write(Block_Mat_exit45_pro_U0_cr_upper_out_write),
    .if_dout(cr_upper_channel_dout),
    .if_empty_n(cr_upper_channel_empty_n),
    .if_read(ImgProcess_U0_cr_upper_read)
);

ImgProcess_Top_srocq src_mat_rows_V_chann_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(Block_Mat_exit45_pro_U0_ap_return_0),
    .if_full_n(src_mat_rows_V_chann_full_n),
    .if_write(ap_channel_done_src_mat_rows_V_chann),
    .if_dout(src_mat_rows_V_chann_dout),
    .if_empty_n(src_mat_rows_V_chann_empty_n),
    .if_read(AXIvideo2Mat_U0_ap_ready)
);

ImgProcess_Top_srpcA src_mat_cols_V_chann_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(Block_Mat_exit45_pro_U0_ap_return_1),
    .if_full_n(src_mat_cols_V_chann_full_n),
    .if_write(ap_channel_done_src_mat_cols_V_chann),
    .if_dout(src_mat_cols_V_chann_dout),
    .if_empty_n(src_mat_cols_V_chann_empty_n),
    .if_read(AXIvideo2Mat_U0_ap_ready)
);

ImgProcess_Top_srqcK src_mat_data_stream_s_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(AXIvideo2Mat_U0_img_data_stream_0_V_din),
    .if_full_n(src_mat_data_stream_s_full_n),
    .if_write(AXIvideo2Mat_U0_img_data_stream_0_V_write),
    .if_dout(src_mat_data_stream_s_dout),
    .if_empty_n(src_mat_data_stream_s_empty_n),
    .if_read(ImgProcess_U0_p_src_data_stream_0_V_read)
);

ImgProcess_Top_srrcU src_mat_data_stream_1_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(AXIvideo2Mat_U0_img_data_stream_1_V_din),
    .if_full_n(src_mat_data_stream_1_full_n),
    .if_write(AXIvideo2Mat_U0_img_data_stream_1_V_write),
    .if_dout(src_mat_data_stream_1_dout),
    .if_empty_n(src_mat_data_stream_1_empty_n),
    .if_read(ImgProcess_U0_p_src_data_stream_1_V_read)
);

ImgProcess_Top_srsc4 src_mat_data_stream_2_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(AXIvideo2Mat_U0_img_data_stream_2_V_din),
    .if_full_n(src_mat_data_stream_2_full_n),
    .if_write(AXIvideo2Mat_U0_img_data_stream_2_V_write),
    .if_dout(src_mat_data_stream_2_dout),
    .if_empty_n(src_mat_data_stream_2_empty_n),
    .if_read(ImgProcess_U0_p_src_data_stream_2_V_read)
);

ImgProcess_Top_dstde dst_mat_data_stream_s_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(ImgProcess_U0_p_dst_data_stream_0_V_din),
    .if_full_n(dst_mat_data_stream_s_full_n),
    .if_write(ImgProcess_U0_p_dst_data_stream_0_V_write),
    .if_dout(dst_mat_data_stream_s_dout),
    .if_empty_n(dst_mat_data_stream_s_empty_n),
    .if_read(Mat2AXIvideo_U0_img_data_stream_0_V_read)
);

ImgProcess_Top_dsudo dst_mat_data_stream_1_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(ImgProcess_U0_p_dst_data_stream_1_V_din),
    .if_full_n(dst_mat_data_stream_1_full_n),
    .if_write(ImgProcess_U0_p_dst_data_stream_1_V_write),
    .if_dout(dst_mat_data_stream_1_dout),
    .if_empty_n(dst_mat_data_stream_1_empty_n),
    .if_read(Mat2AXIvideo_U0_img_data_stream_1_V_read)
);

ImgProcess_Top_dsvdy dst_mat_data_stream_2_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(ImgProcess_U0_p_dst_data_stream_2_V_din),
    .if_full_n(dst_mat_data_stream_2_full_n),
    .if_write(ImgProcess_U0_p_dst_data_stream_2_V_write),
    .if_dout(dst_mat_data_stream_2_dout),
    .if_empty_n(dst_mat_data_stream_2_empty_n),
    .if_read(Mat2AXIvideo_U0_img_data_stream_2_V_read)
);

start_for_ImgProcwdI start_for_ImgProcwdI_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(start_for_ImgProcess_U0_din),
    .if_full_n(start_for_ImgProcess_U0_full_n),
    .if_write(Block_Mat_exit45_pro_U0_start_write),
    .if_dout(start_for_ImgProcess_U0_dout),
    .if_empty_n(start_for_ImgProcess_U0_empty_n),
    .if_read(ImgProcess_U0_ap_ready)
);

start_for_Mat2AXIxdS start_for_Mat2AXIxdS_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(start_for_Mat2AXIvideo_U0_din),
    .if_full_n(start_for_Mat2AXIvideo_U0_full_n),
    .if_write(Block_Mat_exit45_pro_U0_start_write),
    .if_dout(start_for_Mat2AXIvideo_U0_dout),
    .if_empty_n(start_for_Mat2AXIvideo_U0_empty_n),
    .if_read(Mat2AXIvideo_U0_ap_ready)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_AXIvideo2Mat_U0_ap_ready <= 1'b0;
    end else begin
        if ((1'b1 == (ap_start & ap_hs_ready))) begin
            ap_sync_reg_AXIvideo2Mat_U0_ap_ready <= 1'b0;
        end else begin
            ap_sync_reg_AXIvideo2Mat_U0_ap_ready <= ap_sync_AXIvideo2Mat_U0_ap_ready;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_Block_Mat_exit45_pro_U0_ap_ready <= 1'b0;
    end else begin
        if ((1'b1 == (ap_start & ap_hs_ready))) begin
            ap_sync_reg_Block_Mat_exit45_pro_U0_ap_ready <= 1'b0;
        end else begin
            ap_sync_reg_Block_Mat_exit45_pro_U0_ap_ready <= ap_sync_Block_Mat_exit45_pro_U0_ap_ready;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_channel_write_src_mat_cols_V_chann <= 1'b0;
    end else begin
        if ((1'b1 == (Block_Mat_exit45_pro_U0_ap_done & Block_Mat_exit45_pro_U0_ap_continue))) begin
            ap_sync_reg_channel_write_src_mat_cols_V_chann <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_src_mat_cols_V_chann <= ap_sync_channel_write_src_mat_cols_V_chann;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_channel_write_src_mat_rows_V_chann <= 1'b0;
    end else begin
        if ((1'b1 == (Block_Mat_exit45_pro_U0_ap_done & Block_Mat_exit45_pro_U0_ap_continue))) begin
            ap_sync_reg_channel_write_src_mat_rows_V_chann <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_src_mat_rows_V_chann <= ap_sync_channel_write_src_mat_rows_V_chann;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == AXIvideo2Mat_U0_ap_ready) & (1'b1 == ap_hs_ready))) begin
        AXIvideo2Mat_U0_ap_ready_count <= (AXIvideo2Mat_U0_ap_ready_count - ap_const_lv2_1);
    end else if (((1'b1 == AXIvideo2Mat_U0_ap_ready) & (1'b0 == ap_hs_ready))) begin
        AXIvideo2Mat_U0_ap_ready_count <= (AXIvideo2Mat_U0_ap_ready_count + ap_const_lv2_1);
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_hs_ready) & (Block_Mat_exit45_pro_U0_ap_ready == 1'b0))) begin
        Block_Mat_exit45_pro_U0_ap_ready_count <= (Block_Mat_exit45_pro_U0_ap_ready_count - ap_const_lv2_1);
    end else if (((1'b0 == ap_hs_ready) & (1'b1 == Block_Mat_exit45_pro_U0_ap_ready))) begin
        Block_Mat_exit45_pro_U0_ap_ready_count <= (Block_Mat_exit45_pro_U0_ap_ready_count + ap_const_lv2_1);
    end
end

assign AXIvideo2Mat_U0_ap_continue = 1'b1;

assign AXIvideo2Mat_U0_ap_start = (src_mat_rows_V_chann_empty_n & src_mat_cols_V_chann_empty_n & ap_sync_AXIvideo2Mat_U0_ap_start);

assign Block_Mat_exit45_pro_U0_ap_continue = (ap_sync_channel_write_src_mat_cols_V_chann & ap_sync_channel_write_src_mat_rows_V_chann);

assign Block_Mat_exit45_pro_U0_ap_start = ap_sync_Block_Mat_exit45_pro_U0_ap_start;

assign INPUT_STREAM_TREADY = AXIvideo2Mat_U0_INPUT_STREAM_TREADY;

assign ImgProcess_U0_ap_continue = 1'b1;

assign ImgProcess_U0_ap_start = start_for_ImgProcess_U0_empty_n;

assign Mat2AXIvideo_U0_ap_continue = 1'b1;

assign Mat2AXIvideo_U0_ap_start = start_for_Mat2AXIvideo_U0_empty_n;

assign OUTPUT_STREAM_TDATA = Mat2AXIvideo_U0_OUTPUT_STREAM_TDATA;

assign OUTPUT_STREAM_TDEST = Mat2AXIvideo_U0_OUTPUT_STREAM_TDEST;

assign OUTPUT_STREAM_TID = Mat2AXIvideo_U0_OUTPUT_STREAM_TID;

assign OUTPUT_STREAM_TKEEP = Mat2AXIvideo_U0_OUTPUT_STREAM_TKEEP;

assign OUTPUT_STREAM_TLAST = Mat2AXIvideo_U0_OUTPUT_STREAM_TLAST;

assign OUTPUT_STREAM_TSTRB = Mat2AXIvideo_U0_OUTPUT_STREAM_TSTRB;

assign OUTPUT_STREAM_TUSER = Mat2AXIvideo_U0_OUTPUT_STREAM_TUSER;

assign OUTPUT_STREAM_TVALID = Mat2AXIvideo_U0_OUTPUT_STREAM_TVALID;

assign ap_channel_done_src_mat_cols_V_chann = (Block_Mat_exit45_pro_U0_ap_done & (ap_sync_reg_channel_write_src_mat_cols_V_chann ^ 1'b1));

assign ap_channel_done_src_mat_rows_V_chann = (Block_Mat_exit45_pro_U0_ap_done & (ap_sync_reg_channel_write_src_mat_rows_V_chann ^ 1'b1));

assign ap_done = Mat2AXIvideo_U0_ap_done;

assign ap_hs_continue = 1'b1;

assign ap_hs_done = Mat2AXIvideo_U0_ap_done;

assign ap_hs_ready = (ap_sync_AXIvideo2Mat_U0_ap_ready & ap_sync_Block_Mat_exit45_pro_U0_ap_ready);

assign ap_idle = (Block_Mat_exit45_pro_U0_ap_idle & AXIvideo2Mat_U0_ap_idle & ImgProcess_U0_ap_idle & Mat2AXIvideo_U0_ap_idle & (src_mat_rows_V_chann_empty_n ^ 1'b1) & (src_mat_cols_V_chann_empty_n ^ 1'b1));

assign ap_ready = ap_hs_ready;

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign ap_sync_AXIvideo2Mat_U0_ap_ready = (AXIvideo2Mat_U0_ap_ready | ap_sync_reg_AXIvideo2Mat_U0_ap_ready);

assign ap_sync_AXIvideo2Mat_U0_ap_start = (ap_start & (ap_sync_reg_AXIvideo2Mat_U0_ap_ready ^ 1'b1));

assign ap_sync_Block_Mat_exit45_pro_U0_ap_ready = (Block_Mat_exit45_pro_U0_ap_ready | ap_sync_reg_Block_Mat_exit45_pro_U0_ap_ready);

assign ap_sync_Block_Mat_exit45_pro_U0_ap_start = (ap_start & (ap_sync_reg_Block_Mat_exit45_pro_U0_ap_ready ^ 1'b1));

assign ap_sync_channel_write_src_mat_cols_V_chann = ((ap_channel_done_src_mat_cols_V_chann & src_mat_cols_V_chann_full_n) | ap_sync_reg_channel_write_src_mat_cols_V_chann);

assign ap_sync_channel_write_src_mat_rows_V_chann = ((ap_channel_done_src_mat_rows_V_chann & src_mat_rows_V_chann_full_n) | ap_sync_reg_channel_write_src_mat_rows_V_chann);

assign start_for_ImgProcess_U0_din = 1'b1;

assign start_for_Mat2AXIvideo_U0_din = 1'b1;

endmodule //ImgProcess_Top
