// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2015.4
// Copyright (C) 2015 Xilinx Inc. All rights reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module EdgeDetect_Top_AXIvideo2Mat250 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        input_V_data_V_dout,
        input_V_data_V_empty_n,
        input_V_data_V_read,
        input_V_keep_V_dout,
        input_V_keep_V_empty_n,
        input_V_keep_V_read,
        input_V_strb_V_dout,
        input_V_strb_V_empty_n,
        input_V_strb_V_read,
        input_V_user_V_dout,
        input_V_user_V_empty_n,
        input_V_user_V_read,
        input_V_last_V_dout,
        input_V_last_V_empty_n,
        input_V_last_V_read,
        input_V_id_V_dout,
        input_V_id_V_empty_n,
        input_V_id_V_read,
        input_V_dest_V_dout,
        input_V_dest_V_empty_n,
        input_V_dest_V_read,
        rows,
        cols,
        src_mat_data_stream_0_V_din,
        src_mat_data_stream_0_V_full_n,
        src_mat_data_stream_0_V_write,
        src_mat_data_stream_1_V_din,
        src_mat_data_stream_1_V_full_n,
        src_mat_data_stream_1_V_write,
        src_mat_data_stream_2_V_din,
        src_mat_data_stream_2_V_full_n,
        src_mat_data_stream_2_V_write,
        threashold,
        threashold_out_din,
        threashold_out_full_n,
        threashold_out_write
);

parameter    ap_const_logic_1 = 1'b1;
parameter    ap_const_logic_0 = 1'b0;
parameter    ap_ST_st1_fsm_0 = 7'b1;
parameter    ap_ST_st2_fsm_1 = 7'b10;
parameter    ap_ST_st3_fsm_2 = 7'b100;
parameter    ap_ST_st4_fsm_3 = 7'b1000;
parameter    ap_ST_pp1_stg0_fsm_4 = 7'b10000;
parameter    ap_ST_st7_fsm_5 = 7'b100000;
parameter    ap_ST_st8_fsm_6 = 7'b1000000;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    ap_const_lv1_1 = 1'b1;
parameter    ap_const_lv32_1 = 32'b1;
parameter    ap_const_lv32_3 = 32'b11;
parameter    ap_const_lv32_4 = 32'b100;
parameter    ap_const_lv1_0 = 1'b0;
parameter    ap_const_lv32_5 = 32'b101;
parameter    ap_const_lv32_6 = 32'b110;
parameter    ap_const_lv32_2 = 32'b10;
parameter    ap_const_lv9_0 = 9'b000000000;
parameter    ap_const_lv9_1 = 9'b1;
parameter    ap_const_lv32_8 = 32'b1000;
parameter    ap_const_lv32_F = 32'b1111;
parameter    ap_const_lv32_10 = 32'b10000;
parameter    ap_const_lv32_17 = 32'b10111;
parameter    ap_true = 1'b1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [23:0] input_V_data_V_dout;
input   input_V_data_V_empty_n;
output   input_V_data_V_read;
input  [2:0] input_V_keep_V_dout;
input   input_V_keep_V_empty_n;
output   input_V_keep_V_read;
input  [2:0] input_V_strb_V_dout;
input   input_V_strb_V_empty_n;
output   input_V_strb_V_read;
input  [0:0] input_V_user_V_dout;
input   input_V_user_V_empty_n;
output   input_V_user_V_read;
input  [0:0] input_V_last_V_dout;
input   input_V_last_V_empty_n;
output   input_V_last_V_read;
input  [0:0] input_V_id_V_dout;
input   input_V_id_V_empty_n;
output   input_V_id_V_read;
input  [0:0] input_V_dest_V_dout;
input   input_V_dest_V_empty_n;
output   input_V_dest_V_read;
input  [8:0] rows;
input  [8:0] cols;
output  [7:0] src_mat_data_stream_0_V_din;
input   src_mat_data_stream_0_V_full_n;
output   src_mat_data_stream_0_V_write;
output  [7:0] src_mat_data_stream_1_V_din;
input   src_mat_data_stream_1_V_full_n;
output   src_mat_data_stream_1_V_write;
output  [7:0] src_mat_data_stream_2_V_din;
input   src_mat_data_stream_2_V_full_n;
output   src_mat_data_stream_2_V_write;
input  [31:0] threashold;
output  [31:0] threashold_out_din;
input   threashold_out_full_n;
output   threashold_out_write;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg src_mat_data_stream_0_V_write;
reg src_mat_data_stream_1_V_write;
reg src_mat_data_stream_2_V_write;
reg threashold_out_write;
reg    ap_done_reg = 1'b0;
(* fsm_encoding = "none" *) reg   [6:0] ap_CS_fsm = 7'b1;
reg    ap_sig_cseq_ST_st1_fsm_0;
reg    ap_sig_bdd_26;
reg   [8:0] p_5_i_i_i_reg_208;
reg   [0:0] eol_reg_219;
reg   [23:0] axi_data_V_1_i_i_i_reg_230;
reg   [0:0] eol_i_i_i_reg_241;
reg    ap_sig_bdd_99;
reg   [23:0] tmp_data_V_reg_404;
reg    ap_sig_cseq_ST_st2_fsm_1;
reg    ap_sig_bdd_111;
wire    input_V_id_V0_status;
reg   [0:0] tmp_last_V_reg_412;
wire   [0:0] exitcond7_i_i_i_fu_331_p2;
reg    ap_sig_cseq_ST_st4_fsm_3;
reg    ap_sig_bdd_126;
wire   [8:0] i_V_fu_336_p2;
reg   [8:0] i_V_reg_428;
wire   [0:0] exitcond8_i_i_i_fu_342_p2;
reg   [0:0] exitcond8_i_i_i_reg_433;
reg    ap_sig_cseq_ST_pp1_stg0_fsm_4;
reg    ap_sig_bdd_137;
reg    ap_reg_ppiten_pp1_it0 = 1'b0;
wire   [0:0] brmerge_i_i_i_fu_356_p2;
reg    ap_sig_bdd_156;
reg    ap_reg_ppiten_pp1_it1 = 1'b0;
wire   [8:0] j_V_fu_347_p2;
reg    ap_sig_cseq_ST_st7_fsm_5;
reg    ap_sig_bdd_172;
reg    ap_sig_bdd_177;
reg   [0:0] axi_last_V_3_i_i_i_reg_278;
reg   [0:0] axi_last_V1_i_i_i_reg_177;
reg    ap_sig_cseq_ST_st8_fsm_6;
reg    ap_sig_bdd_195;
reg    ap_sig_cseq_ST_st3_fsm_2;
reg    ap_sig_bdd_202;
reg   [23:0] axi_data_V_3_i_i_i_reg_290;
reg   [23:0] axi_data_V1_i_i_i_reg_187;
reg   [8:0] p_i_i_i_reg_197;
reg   [0:0] axi_last_V_2_i_i_i_phi_fu_258_p4;
reg   [23:0] p_Val2_s_phi_fu_270_p4;
wire   [0:0] ap_reg_phiprechg_axi_last_V_2_i_i_i_reg_253pp1_it1;
wire   [23:0] ap_reg_phiprechg_p_Val2_s_reg_266pp1_it1;
reg   [0:0] eol_2_i_i_i_reg_302;
reg    input_V_id_V0_update;
reg   [0:0] sof_1_i_i_i_fu_108;
wire   [0:0] tmp_user_V_fu_322_p1;
reg   [6:0] ap_NS_fsm;
reg    ap_sig_bdd_257;




always @ (posedge ap_clk) begin : ap_ret_ap_CS_fsm
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_st1_fsm_0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin : ap_ret_ap_done_reg
    if (ap_rst == 1'b1) begin
        ap_done_reg <= ap_const_logic_0;
    end else begin
        if ((ap_const_logic_1 == ap_continue)) begin
            ap_done_reg <= ap_const_logic_0;
        end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3) & ~(exitcond7_i_i_i_fu_331_p2 == ap_const_lv1_0))) begin
            ap_done_reg <= ap_const_logic_1;
        end
    end
end

always @ (posedge ap_clk) begin : ap_ret_ap_reg_ppiten_pp1_it0
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp1_it0 <= ap_const_logic_0;
    end else begin
        if (((ap_const_logic_1 == ap_sig_cseq_ST_pp1_stg0_fsm_4) & ~(ap_sig_bdd_156 & (ap_const_logic_1 == ap_reg_ppiten_pp1_it1)) & ~(exitcond8_i_i_i_fu_342_p2 == ap_const_lv1_0))) begin
            ap_reg_ppiten_pp1_it0 <= ap_const_logic_0;
        end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3) & (exitcond7_i_i_i_fu_331_p2 == ap_const_lv1_0))) begin
            ap_reg_ppiten_pp1_it0 <= ap_const_logic_1;
        end
    end
end

always @ (posedge ap_clk) begin : ap_ret_ap_reg_ppiten_pp1_it1
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp1_it1 <= ap_const_logic_0;
    end else begin
        if (((ap_const_logic_1 == ap_sig_cseq_ST_pp1_stg0_fsm_4) & ~(ap_sig_bdd_156 & (ap_const_logic_1 == ap_reg_ppiten_pp1_it1)))) begin
            ap_reg_ppiten_pp1_it1 <= ap_reg_ppiten_pp1_it0;
        end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3) & (exitcond7_i_i_i_fu_331_p2 == ap_const_lv1_0))) begin
            ap_reg_ppiten_pp1_it1 <= ap_const_logic_0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2)) begin
        axi_data_V1_i_i_i_reg_187 <= tmp_data_V_reg_404;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st8_fsm_6)) begin
        axi_data_V1_i_i_i_reg_187 <= axi_data_V_3_i_i_i_reg_290;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp1_stg0_fsm_4) & (exitcond8_i_i_i_reg_433 == ap_const_lv1_0) & (ap_const_logic_1 == ap_reg_ppiten_pp1_it1) & ~(ap_sig_bdd_156 & (ap_const_logic_1 == ap_reg_ppiten_pp1_it1)))) begin
        axi_data_V_1_i_i_i_reg_230 <= p_Val2_s_phi_fu_270_p4;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3) & (exitcond7_i_i_i_fu_331_p2 == ap_const_lv1_0))) begin
        axi_data_V_1_i_i_i_reg_230 <= axi_data_V1_i_i_i_reg_187;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp1_stg0_fsm_4) & (ap_const_logic_1 == ap_reg_ppiten_pp1_it1) & ~(ap_sig_bdd_156 & (ap_const_logic_1 == ap_reg_ppiten_pp1_it1)) & ~(exitcond8_i_i_i_reg_433 == ap_const_lv1_0))) begin
        axi_data_V_3_i_i_i_reg_290 <= axi_data_V_1_i_i_i_reg_230;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st7_fsm_5) & (ap_const_lv1_0 == eol_2_i_i_i_reg_302) & ~ap_sig_bdd_177)) begin
        axi_data_V_3_i_i_i_reg_290 <= input_V_data_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2)) begin
        axi_last_V1_i_i_i_reg_177 <= tmp_last_V_reg_412;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st8_fsm_6)) begin
        axi_last_V1_i_i_i_reg_177 <= axi_last_V_3_i_i_i_reg_278;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp1_stg0_fsm_4) & (ap_const_logic_1 == ap_reg_ppiten_pp1_it1) & ~(ap_sig_bdd_156 & (ap_const_logic_1 == ap_reg_ppiten_pp1_it1)) & ~(exitcond8_i_i_i_reg_433 == ap_const_lv1_0))) begin
        axi_last_V_3_i_i_i_reg_278 <= eol_reg_219;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st7_fsm_5) & (ap_const_lv1_0 == eol_2_i_i_i_reg_302) & ~ap_sig_bdd_177)) begin
        axi_last_V_3_i_i_i_reg_278 <= input_V_last_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp1_stg0_fsm_4) & (ap_const_logic_1 == ap_reg_ppiten_pp1_it1) & ~(ap_sig_bdd_156 & (ap_const_logic_1 == ap_reg_ppiten_pp1_it1)) & ~(exitcond8_i_i_i_reg_433 == ap_const_lv1_0))) begin
        eol_2_i_i_i_reg_302 <= eol_i_i_i_reg_241;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st7_fsm_5) & (ap_const_lv1_0 == eol_2_i_i_i_reg_302) & ~ap_sig_bdd_177)) begin
        eol_2_i_i_i_reg_302 <= input_V_last_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp1_stg0_fsm_4) & (exitcond8_i_i_i_reg_433 == ap_const_lv1_0) & (ap_const_logic_1 == ap_reg_ppiten_pp1_it1) & ~(ap_sig_bdd_156 & (ap_const_logic_1 == ap_reg_ppiten_pp1_it1)))) begin
        eol_i_i_i_reg_241 <= axi_last_V_2_i_i_i_phi_fu_258_p4;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3) & (exitcond7_i_i_i_fu_331_p2 == ap_const_lv1_0))) begin
        eol_i_i_i_reg_241 <= ap_const_lv1_0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp1_stg0_fsm_4) & (exitcond8_i_i_i_reg_433 == ap_const_lv1_0) & (ap_const_logic_1 == ap_reg_ppiten_pp1_it1) & ~(ap_sig_bdd_156 & (ap_const_logic_1 == ap_reg_ppiten_pp1_it1)))) begin
        eol_reg_219 <= axi_last_V_2_i_i_i_phi_fu_258_p4;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3) & (exitcond7_i_i_i_fu_331_p2 == ap_const_lv1_0))) begin
        eol_reg_219 <= axi_last_V1_i_i_i_reg_177;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp1_stg0_fsm_4) & (ap_const_logic_1 == ap_reg_ppiten_pp1_it0) & ~(ap_sig_bdd_156 & (ap_const_logic_1 == ap_reg_ppiten_pp1_it1)) & (exitcond8_i_i_i_fu_342_p2 == ap_const_lv1_0))) begin
        p_5_i_i_i_reg_208 <= j_V_fu_347_p2;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3) & (exitcond7_i_i_i_fu_331_p2 == ap_const_lv1_0))) begin
        p_5_i_i_i_reg_208 <= ap_const_lv9_0;
    end
end

always @ (posedge ap_clk) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2)) begin
        p_i_i_i_reg_197 <= ap_const_lv9_0;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st8_fsm_6)) begin
        p_i_i_i_reg_197 <= i_V_reg_428;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp1_stg0_fsm_4) & (exitcond8_i_i_i_reg_433 == ap_const_lv1_0) & (ap_const_logic_1 == ap_reg_ppiten_pp1_it1) & ~(ap_sig_bdd_156 & (ap_const_logic_1 == ap_reg_ppiten_pp1_it1)))) begin
        sof_1_i_i_i_fu_108 <= ap_const_lv1_0;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2)) begin
        sof_1_i_i_i_fu_108 <= ap_const_lv1_1;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp1_stg0_fsm_4) & ~(ap_sig_bdd_156 & (ap_const_logic_1 == ap_reg_ppiten_pp1_it1)))) begin
        exitcond8_i_i_i_reg_433 <= exitcond8_i_i_i_fu_342_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        i_V_reg_428 <= i_V_fu_336_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & ~(input_V_id_V0_status == ap_const_logic_0))) begin
        tmp_data_V_reg_404 <= input_V_data_V_dout;
        tmp_last_V_reg_412 <= input_V_last_V_dout;
    end
end

always @ (ap_done_reg or exitcond7_i_i_i_fu_331_p2 or ap_sig_cseq_ST_st4_fsm_3) begin
    if (((ap_const_logic_1 == ap_done_reg) | ((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3) & ~(exitcond7_i_i_i_fu_331_p2 == ap_const_lv1_0)))) begin
        ap_done = ap_const_logic_1;
    end else begin
        ap_done = ap_const_logic_0;
    end
end

always @ (ap_start or ap_sig_cseq_ST_st1_fsm_0) begin
    if ((~(ap_const_logic_1 == ap_start) & (ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0))) begin
        ap_idle = ap_const_logic_1;
    end else begin
        ap_idle = ap_const_logic_0;
    end
end

always @ (exitcond7_i_i_i_fu_331_p2 or ap_sig_cseq_ST_st4_fsm_3) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3) & ~(exitcond7_i_i_i_fu_331_p2 == ap_const_lv1_0))) begin
        ap_ready = ap_const_logic_1;
    end else begin
        ap_ready = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_137) begin
    if (ap_sig_bdd_137) begin
        ap_sig_cseq_ST_pp1_stg0_fsm_4 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_pp1_stg0_fsm_4 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_26) begin
    if (ap_sig_bdd_26) begin
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_111) begin
    if (ap_sig_bdd_111) begin
        ap_sig_cseq_ST_st2_fsm_1 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st2_fsm_1 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_202) begin
    if (ap_sig_bdd_202) begin
        ap_sig_cseq_ST_st3_fsm_2 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st3_fsm_2 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_126) begin
    if (ap_sig_bdd_126) begin
        ap_sig_cseq_ST_st4_fsm_3 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st4_fsm_3 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_172) begin
    if (ap_sig_bdd_172) begin
        ap_sig_cseq_ST_st7_fsm_5 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st7_fsm_5 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_195) begin
    if (ap_sig_bdd_195) begin
        ap_sig_cseq_ST_st8_fsm_6 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st8_fsm_6 = ap_const_logic_0;
    end
end

always @ (input_V_last_V_dout or eol_reg_219 or brmerge_i_i_i_fu_356_p2 or ap_reg_phiprechg_axi_last_V_2_i_i_i_reg_253pp1_it1 or ap_sig_bdd_257) begin
    if (ap_sig_bdd_257) begin
        if (~(ap_const_lv1_0 == brmerge_i_i_i_fu_356_p2)) begin
            axi_last_V_2_i_i_i_phi_fu_258_p4 = eol_reg_219;
        end else if ((ap_const_lv1_0 == brmerge_i_i_i_fu_356_p2)) begin
            axi_last_V_2_i_i_i_phi_fu_258_p4 = input_V_last_V_dout;
        end else begin
            axi_last_V_2_i_i_i_phi_fu_258_p4 = ap_reg_phiprechg_axi_last_V_2_i_i_i_reg_253pp1_it1;
        end
    end else begin
        axi_last_V_2_i_i_i_phi_fu_258_p4 = ap_reg_phiprechg_axi_last_V_2_i_i_i_reg_253pp1_it1;
    end
end

always @ (ap_sig_cseq_ST_st2_fsm_1 or input_V_id_V0_status or exitcond8_i_i_i_reg_433 or ap_sig_cseq_ST_pp1_stg0_fsm_4 or brmerge_i_i_i_fu_356_p2 or ap_sig_bdd_156 or ap_reg_ppiten_pp1_it1 or ap_sig_cseq_ST_st7_fsm_5 or ap_sig_bdd_177 or eol_2_i_i_i_reg_302) begin
    if ((((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & ~(input_V_id_V0_status == ap_const_logic_0)) | ((ap_const_logic_1 == ap_sig_cseq_ST_st7_fsm_5) & (ap_const_lv1_0 == eol_2_i_i_i_reg_302) & ~ap_sig_bdd_177) | ((ap_const_logic_1 == ap_sig_cseq_ST_pp1_stg0_fsm_4) & (exitcond8_i_i_i_reg_433 == ap_const_lv1_0) & (ap_const_lv1_0 == brmerge_i_i_i_fu_356_p2) & (ap_const_logic_1 == ap_reg_ppiten_pp1_it1) & ~(ap_sig_bdd_156 & (ap_const_logic_1 == ap_reg_ppiten_pp1_it1))))) begin
        input_V_id_V0_update = ap_const_logic_1;
    end else begin
        input_V_id_V0_update = ap_const_logic_0;
    end
end

always @ (input_V_data_V_dout or axi_data_V_1_i_i_i_reg_230 or brmerge_i_i_i_fu_356_p2 or ap_reg_phiprechg_p_Val2_s_reg_266pp1_it1 or ap_sig_bdd_257) begin
    if (ap_sig_bdd_257) begin
        if (~(ap_const_lv1_0 == brmerge_i_i_i_fu_356_p2)) begin
            p_Val2_s_phi_fu_270_p4 = axi_data_V_1_i_i_i_reg_230;
        end else if ((ap_const_lv1_0 == brmerge_i_i_i_fu_356_p2)) begin
            p_Val2_s_phi_fu_270_p4 = input_V_data_V_dout;
        end else begin
            p_Val2_s_phi_fu_270_p4 = ap_reg_phiprechg_p_Val2_s_reg_266pp1_it1;
        end
    end else begin
        p_Val2_s_phi_fu_270_p4 = ap_reg_phiprechg_p_Val2_s_reg_266pp1_it1;
    end
end

always @ (exitcond8_i_i_i_reg_433 or ap_sig_cseq_ST_pp1_stg0_fsm_4 or ap_sig_bdd_156 or ap_reg_ppiten_pp1_it1) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp1_stg0_fsm_4) & (exitcond8_i_i_i_reg_433 == ap_const_lv1_0) & (ap_const_logic_1 == ap_reg_ppiten_pp1_it1) & ~(ap_sig_bdd_156 & (ap_const_logic_1 == ap_reg_ppiten_pp1_it1)))) begin
        src_mat_data_stream_0_V_write = ap_const_logic_1;
    end else begin
        src_mat_data_stream_0_V_write = ap_const_logic_0;
    end
end

always @ (exitcond8_i_i_i_reg_433 or ap_sig_cseq_ST_pp1_stg0_fsm_4 or ap_sig_bdd_156 or ap_reg_ppiten_pp1_it1) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp1_stg0_fsm_4) & (exitcond8_i_i_i_reg_433 == ap_const_lv1_0) & (ap_const_logic_1 == ap_reg_ppiten_pp1_it1) & ~(ap_sig_bdd_156 & (ap_const_logic_1 == ap_reg_ppiten_pp1_it1)))) begin
        src_mat_data_stream_1_V_write = ap_const_logic_1;
    end else begin
        src_mat_data_stream_1_V_write = ap_const_logic_0;
    end
end

always @ (exitcond8_i_i_i_reg_433 or ap_sig_cseq_ST_pp1_stg0_fsm_4 or ap_sig_bdd_156 or ap_reg_ppiten_pp1_it1) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp1_stg0_fsm_4) & (exitcond8_i_i_i_reg_433 == ap_const_lv1_0) & (ap_const_logic_1 == ap_reg_ppiten_pp1_it1) & ~(ap_sig_bdd_156 & (ap_const_logic_1 == ap_reg_ppiten_pp1_it1)))) begin
        src_mat_data_stream_2_V_write = ap_const_logic_1;
    end else begin
        src_mat_data_stream_2_V_write = ap_const_logic_0;
    end
end

always @ (ap_sig_cseq_ST_st1_fsm_0 or ap_sig_bdd_99) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~ap_sig_bdd_99)) begin
        threashold_out_write = ap_const_logic_1;
    end else begin
        threashold_out_write = ap_const_logic_0;
    end
end
always @ (ap_CS_fsm or ap_sig_bdd_99 or input_V_id_V0_status or exitcond7_i_i_i_fu_331_p2 or ap_sig_cseq_ST_pp1_stg0_fsm_4 or ap_reg_ppiten_pp1_it0 or ap_sig_bdd_156 or ap_reg_ppiten_pp1_it1 or ap_sig_bdd_177 or eol_2_i_i_i_reg_302 or tmp_user_V_fu_322_p1) begin
    case (ap_CS_fsm)
        ap_ST_st1_fsm_0 : 
        begin
            if (~ap_sig_bdd_99) begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end else begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end
        end
        ap_ST_st2_fsm_1 : 
        begin
            if ((~(input_V_id_V0_status == ap_const_logic_0) & (ap_const_lv1_0 == tmp_user_V_fu_322_p1))) begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end else if ((~(input_V_id_V0_status == ap_const_logic_0) & ~(ap_const_lv1_0 == tmp_user_V_fu_322_p1))) begin
                ap_NS_fsm = ap_ST_st3_fsm_2;
            end else begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end
        end
        ap_ST_st3_fsm_2 : 
        begin
            ap_NS_fsm = ap_ST_st4_fsm_3;
        end
        ap_ST_st4_fsm_3 : 
        begin
            if (~(exitcond7_i_i_i_fu_331_p2 == ap_const_lv1_0)) begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end else begin
                ap_NS_fsm = ap_ST_pp1_stg0_fsm_4;
            end
        end
        ap_ST_pp1_stg0_fsm_4 : 
        begin
            if (~((ap_const_logic_1 == ap_sig_cseq_ST_pp1_stg0_fsm_4) & (ap_const_logic_1 == ap_reg_ppiten_pp1_it1) & ~(ap_sig_bdd_156 & (ap_const_logic_1 == ap_reg_ppiten_pp1_it1)) & ~(ap_const_logic_1 == ap_reg_ppiten_pp1_it0))) begin
                ap_NS_fsm = ap_ST_pp1_stg0_fsm_4;
            end else if (((ap_const_logic_1 == ap_sig_cseq_ST_pp1_stg0_fsm_4) & (ap_const_logic_1 == ap_reg_ppiten_pp1_it1) & ~(ap_sig_bdd_156 & (ap_const_logic_1 == ap_reg_ppiten_pp1_it1)) & ~(ap_const_logic_1 == ap_reg_ppiten_pp1_it0))) begin
                ap_NS_fsm = ap_ST_st7_fsm_5;
            end else begin
                ap_NS_fsm = ap_ST_pp1_stg0_fsm_4;
            end
        end
        ap_ST_st7_fsm_5 : 
        begin
            if (((ap_const_lv1_0 == eol_2_i_i_i_reg_302) & ~ap_sig_bdd_177)) begin
                ap_NS_fsm = ap_ST_st7_fsm_5;
            end else if ((~ap_sig_bdd_177 & ~(ap_const_lv1_0 == eol_2_i_i_i_reg_302))) begin
                ap_NS_fsm = ap_ST_st8_fsm_6;
            end else begin
                ap_NS_fsm = ap_ST_st7_fsm_5;
            end
        end
        ap_ST_st8_fsm_6 : 
        begin
            ap_NS_fsm = ap_ST_st4_fsm_3;
        end
        default : 
        begin
            ap_NS_fsm = 'bx;
        end
    endcase
end


assign ap_reg_phiprechg_axi_last_V_2_i_i_i_reg_253pp1_it1 = 'bx;

assign ap_reg_phiprechg_p_Val2_s_reg_266pp1_it1 = 'bx;


always @ (ap_CS_fsm) begin
    ap_sig_bdd_111 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_1]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_126 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_3]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_137 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_4]);
end


always @ (src_mat_data_stream_0_V_full_n or src_mat_data_stream_1_V_full_n or src_mat_data_stream_2_V_full_n or input_V_id_V0_status or exitcond8_i_i_i_reg_433 or brmerge_i_i_i_fu_356_p2) begin
    ap_sig_bdd_156 = (((input_V_id_V0_status == ap_const_logic_0) & (exitcond8_i_i_i_reg_433 == ap_const_lv1_0) & (ap_const_lv1_0 == brmerge_i_i_i_fu_356_p2)) | ((exitcond8_i_i_i_reg_433 == ap_const_lv1_0) & (src_mat_data_stream_0_V_full_n == ap_const_logic_0)) | ((exitcond8_i_i_i_reg_433 == ap_const_lv1_0) & (src_mat_data_stream_1_V_full_n == ap_const_logic_0)) | ((exitcond8_i_i_i_reg_433 == ap_const_lv1_0) & (src_mat_data_stream_2_V_full_n == ap_const_logic_0)));
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_172 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_5]);
end


always @ (input_V_id_V0_status or eol_2_i_i_i_reg_302) begin
    ap_sig_bdd_177 = ((input_V_id_V0_status == ap_const_logic_0) & (ap_const_lv1_0 == eol_2_i_i_i_reg_302));
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_195 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_6]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_202 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_2]);
end


always @ (exitcond8_i_i_i_reg_433 or ap_sig_cseq_ST_pp1_stg0_fsm_4 or ap_reg_ppiten_pp1_it1) begin
    ap_sig_bdd_257 = ((ap_const_logic_1 == ap_sig_cseq_ST_pp1_stg0_fsm_4) & (exitcond8_i_i_i_reg_433 == ap_const_lv1_0) & (ap_const_logic_1 == ap_reg_ppiten_pp1_it1));
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_26 = (ap_CS_fsm[ap_const_lv32_0] == ap_const_lv1_1);
end


always @ (ap_start or ap_done_reg or threashold_out_full_n) begin
    ap_sig_bdd_99 = ((threashold_out_full_n == ap_const_logic_0) | (ap_start == ap_const_logic_0) | (ap_done_reg == ap_const_logic_1));
end

assign brmerge_i_i_i_fu_356_p2 = (sof_1_i_i_i_fu_108 | eol_i_i_i_reg_241);

assign exitcond7_i_i_i_fu_331_p2 = (p_i_i_i_reg_197 == rows? 1'b1: 1'b0);

assign exitcond8_i_i_i_fu_342_p2 = (p_5_i_i_i_reg_208 == cols? 1'b1: 1'b0);

assign i_V_fu_336_p2 = (p_i_i_i_reg_197 + ap_const_lv9_1);

assign input_V_data_V_read = input_V_id_V0_update;

assign input_V_dest_V_read = input_V_id_V0_update;

assign input_V_id_V0_status = (input_V_data_V_empty_n & input_V_keep_V_empty_n & input_V_strb_V_empty_n & input_V_user_V_empty_n & input_V_last_V_empty_n & input_V_id_V_empty_n & input_V_dest_V_empty_n);

assign input_V_id_V_read = input_V_id_V0_update;

assign input_V_keep_V_read = input_V_id_V0_update;

assign input_V_last_V_read = input_V_id_V0_update;

assign input_V_strb_V_read = input_V_id_V0_update;

assign input_V_user_V_read = input_V_id_V0_update;

assign j_V_fu_347_p2 = (p_5_i_i_i_reg_208 + ap_const_lv9_1);

assign src_mat_data_stream_0_V_din = p_Val2_s_phi_fu_270_p4[7:0];

assign src_mat_data_stream_1_V_din = {{p_Val2_s_phi_fu_270_p4[ap_const_lv32_F : ap_const_lv32_8]}};

assign src_mat_data_stream_2_V_din = {{p_Val2_s_phi_fu_270_p4[ap_const_lv32_17 : ap_const_lv32_10]}};

assign threashold_out_din = threashold;

assign tmp_user_V_fu_322_p1 = input_V_user_V_dout;


endmodule //EdgeDetect_Top_AXIvideo2Mat250

