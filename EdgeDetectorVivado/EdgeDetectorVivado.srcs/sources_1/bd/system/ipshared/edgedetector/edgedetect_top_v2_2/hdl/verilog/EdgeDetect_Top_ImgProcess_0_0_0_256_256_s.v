// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2015.4
// Copyright (C) 2015 Xilinx Inc. All rights reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module EdgeDetect_Top_ImgProcess_0_0_0_256_256_s (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        p_src_data_stream_V_dout,
        p_src_data_stream_V_empty_n,
        p_src_data_stream_V_read,
        p_temp_data_stream_V_din,
        p_temp_data_stream_V_full_n,
        p_temp_data_stream_V_write,
        p_dir_data_stream_V_din,
        p_dir_data_stream_V_full_n,
        p_dir_data_stream_V_write,
        width,
        height
);

parameter    ap_const_logic_1 = 1'b1;
parameter    ap_const_logic_0 = 1'b0;
parameter    ap_ST_st1_fsm_0 = 13'b1;
parameter    ap_ST_st2_fsm_1 = 13'b10;
parameter    ap_ST_st3_fsm_2 = 13'b100;
parameter    ap_ST_st4_fsm_3 = 13'b1000;
parameter    ap_ST_st5_fsm_4 = 13'b10000;
parameter    ap_ST_st6_fsm_5 = 13'b100000;
parameter    ap_ST_st7_fsm_6 = 13'b1000000;
parameter    ap_ST_st8_fsm_7 = 13'b10000000;
parameter    ap_ST_st9_fsm_8 = 13'b100000000;
parameter    ap_ST_st10_fsm_9 = 13'b1000000000;
parameter    ap_ST_st11_fsm_10 = 13'b10000000000;
parameter    ap_ST_st12_fsm_11 = 13'b100000000000;
parameter    ap_ST_st13_fsm_12 = 13'b1000000000000;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    ap_const_lv1_1 = 1'b1;
parameter    ap_const_lv32_1 = 32'b1;
parameter    ap_const_lv1_0 = 1'b0;
parameter    ap_const_lv32_2 = 32'b10;
parameter    ap_const_lv32_4 = 32'b100;
parameter    ap_const_lv32_5 = 32'b101;
parameter    ap_const_lv32_B = 32'b1011;
parameter    ap_const_lv10_0 = 10'b0000000000;
parameter    ap_const_lv32_C = 32'b1100;
parameter    ap_const_lv8_0 = 8'b00000000;
parameter    ap_const_lv32_A = 32'b1010;
parameter    ap_const_lv64_0 = 64'b0000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_const_lv64_1 = 64'b1;
parameter    ap_const_lv64_2 = 64'b10;
parameter    ap_const_lv64_3 = 64'b11;
parameter    ap_const_lv64_4 = 64'b100;
parameter    ap_const_lv64_5 = 64'b101;
parameter    ap_const_lv64_6 = 64'b110;
parameter    ap_const_lv64_7 = 64'b111;
parameter    ap_const_lv64_8 = 64'b1000;
parameter    ap_const_lv32_3 = 32'b11;
parameter    ap_const_lv32_6 = 32'b110;
parameter    ap_const_lv32_7 = 32'b111;
parameter    ap_const_lv32_9 = 32'b1001;
parameter    ap_const_lv32_8 = 32'b1000;
parameter    ap_const_lv10_1 = 10'b1;
parameter    ap_const_lv9_0 = 9'b000000000;
parameter    ap_true = 1'b1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [7:0] p_src_data_stream_V_dout;
input   p_src_data_stream_V_empty_n;
output   p_src_data_stream_V_read;
output  [7:0] p_temp_data_stream_V_din;
input   p_temp_data_stream_V_full_n;
output   p_temp_data_stream_V_write;
output  [7:0] p_dir_data_stream_V_din;
input   p_dir_data_stream_V_full_n;
output   p_dir_data_stream_V_write;
input  [8:0] width;
input  [8:0] height;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg p_src_data_stream_V_read;
reg p_temp_data_stream_V_write;
reg p_dir_data_stream_V_write;
reg    ap_done_reg = 1'b0;
(* fsm_encoding = "none" *) reg   [12:0] ap_CS_fsm = 13'b1;
reg    ap_sig_cseq_ST_st1_fsm_0;
reg    ap_sig_bdd_32;
wire   [3:0] p_addr_gep_fu_170_p3;
reg   [3:0] p_addr_reg_645;
reg    ap_sig_bdd_58;
wire   [3:0] p_addr_1_gep_fu_178_p3;
reg   [3:0] p_addr_1_reg_650;
wire   [3:0] p_addr_2_gep_fu_186_p3;
reg   [3:0] p_addr_2_reg_655;
wire   [3:0] p_addr_3_gep_fu_194_p3;
reg   [3:0] p_addr_3_reg_660;
wire   [3:0] p_addr_4_gep_fu_202_p3;
reg   [3:0] p_addr_4_reg_665;
wire   [3:0] p_addr_5_gep_fu_210_p3;
reg   [3:0] p_addr_5_reg_670;
wire   [3:0] p_addr_6_gep_fu_218_p3;
reg   [3:0] p_addr_6_reg_675;
wire   [3:0] p_addr_7_gep_fu_226_p3;
reg   [3:0] p_addr_7_reg_680;
wire   [3:0] p_addr_8_gep_fu_234_p3;
reg   [3:0] p_addr_8_reg_685;
wire   [9:0] tmp_3_fu_371_p1;
wire   [9:0] tmp_4_fu_375_p2;
wire   [9:0] tmp_6_fu_381_p1;
wire   [9:0] tmp_7_fu_385_p2;
wire   [9:0] q_V_fu_396_p2;
reg   [9:0] q_V_reg_713;
reg    ap_sig_cseq_ST_st2_fsm_1;
reg    ap_sig_bdd_92;
wire   [0:0] tmp_136_i_fu_402_p2;
reg   [0:0] tmp_136_i_reg_718;
wire   [0:0] exitcond1_fu_391_p2;
wire   [0:0] tmp_138_i_fu_423_p2;
reg   [0:0] tmp_138_i_reg_723;
wire   [0:0] tmp_fu_429_p2;
reg   [0:0] tmp_reg_728;
wire   [9:0] p_V_fu_440_p2;
reg   [9:0] p_V_reg_736;
reg    ap_sig_cseq_ST_st3_fsm_2;
reg    ap_sig_bdd_111;
wire   [0:0] tmp_140_i_fu_446_p2;
reg   [0:0] tmp_140_i_reg_741;
wire   [0:0] exitcond_fu_435_p2;
wire   [63:0] tmp_141_i_fu_451_p1;
reg   [63:0] tmp_141_i_reg_750;
reg   [7:0] lb_val_1_addr_reg_760;
reg    ap_sig_cseq_ST_st5_fsm_4;
reg    ap_sig_bdd_135;
reg   [7:0] sw_val_1_1_load_reg_773;
reg    ap_sig_cseq_ST_st6_fsm_5;
reg    ap_sig_bdd_147;
reg   [7:0] sw_val_2_1_load_reg_778;
wire   [7:0] sw_val_2_0_1_fu_487_p3;
reg   [7:0] sw_val_2_0_1_reg_783;
wire   [7:0] sw_val_1_0_1_fu_494_p3;
reg   [7:0] sw_val_1_0_1_reg_789;
wire   [7:0] sw_val_0_0_1_fu_501_p3;
reg   [7:0] sw_val_0_0_1_reg_795;
wire   [0:0] or_cond2_i_fu_530_p2;
reg   [0:0] or_cond2_i_reg_800;
reg    ap_sig_cseq_ST_st12_fsm_11;
reg    ap_sig_bdd_166;
wire    grp_EdgeDetect_Top_sobel_operation_fu_346_ap_done;
wire   [7:0] edge_weight_fu_555_p1;
wire   [0:0] or_cond3_i_fu_565_p2;
reg   [0:0] or_cond3_i_reg_814;
reg   [7:0] lb_val_0_address0;
reg    lb_val_0_ce0;
reg    lb_val_0_we0;
wire   [7:0] lb_val_0_d0;
wire   [7:0] lb_val_0_q0;
reg   [7:0] lb_val_1_address0;
reg    lb_val_1_ce0;
reg    lb_val_1_we0;
wire   [7:0] lb_val_1_d0;
wire   [7:0] lb_val_1_q0;
reg   [7:0] lb_val_2_address0;
reg    lb_val_2_ce0;
reg    lb_val_2_we0;
wire   [7:0] lb_val_2_d0;
wire   [7:0] lb_val_2_q0;
reg   [3:0] empty_address0;
reg    empty_ce0;
reg    empty_we0;
reg   [7:0] empty_d0;
wire   [7:0] empty_q0;
reg   [3:0] empty_address1;
reg    empty_ce1;
reg    empty_we1;
reg   [7:0] empty_d1;
wire    grp_EdgeDetect_Top_sobel_operation_fu_346_ap_start;
wire    grp_EdgeDetect_Top_sobel_operation_fu_346_ap_idle;
wire    grp_EdgeDetect_Top_sobel_operation_fu_346_ap_ready;
wire   [3:0] grp_EdgeDetect_Top_sobel_operation_fu_346_data_val_address0;
wire    grp_EdgeDetect_Top_sobel_operation_fu_346_data_val_ce0;
wire   [7:0] grp_EdgeDetect_Top_sobel_operation_fu_346_data_val_q0;
wire   [31:0] grp_EdgeDetect_Top_sobel_operation_fu_346_ap_return_0;
wire   [7:0] grp_EdgeDetect_Top_sobel_operation_fu_346_ap_return_1;
reg   [9:0] p_i_reg_299;
reg   [9:0] p_3_i_reg_310;
reg    ap_sig_cseq_ST_st13_fsm_12;
reg    ap_sig_bdd_244;
reg    ap_sig_bdd_252;
reg   [7:0] tmp_12_reg_322;
reg   [7:0] tmp_10_reg_334;
reg    grp_EdgeDetect_Top_sobel_operation_fu_346_ap_start_ap_start_reg = 1'b0;
reg    ap_sig_cseq_ST_st11_fsm_10;
reg    ap_sig_bdd_269;
reg    ap_sig_cseq_ST_st4_fsm_3;
reg    ap_sig_bdd_327;
wire   [63:0] tmp_142_i_fu_466_p1;
wire   [0:0] brmerge_demorgan_i_fu_462_p2;
wire   [63:0] tmp_143_i_fu_476_p1;
reg    ap_sig_bdd_340;
reg   [7:0] sw_val_1_0_fu_90;
reg   [7:0] sw_val_0_0_fu_94;
reg   [7:0] sw_val_0_1_fu_98;
reg   [7:0] sw_val_0_1_1_fu_102;
reg    ap_sig_cseq_ST_st7_fsm_6;
reg    ap_sig_bdd_369;
reg   [7:0] sw_val_1_1_fu_106;
reg   [7:0] sw_val_1_1_1_fu_110;
reg    ap_sig_cseq_ST_st8_fsm_7;
reg    ap_sig_bdd_382;
reg   [7:0] sw_val_2_1_fu_114;
reg   [7:0] sw_val_2_1_1_fu_118;
reg    ap_sig_cseq_ST_st10_fsm_9;
reg    ap_sig_bdd_395;
reg    ap_sig_cseq_ST_st9_fsm_8;
reg    ap_sig_bdd_412;
wire   [8:0] tmp_106_fu_407_p4;
wire   [0:0] icmp_fu_417_p2;
wire   [8:0] tmp_108_fu_509_p4;
wire   [0:0] icmp2_fu_519_p2;
wire   [0:0] tmp1_fu_525_p2;
wire   [0:0] tmp_146_i_fu_559_p2;
reg   [12:0] ap_NS_fsm;


EdgeDetect_Top_ImgProcess_0_0_0_256_256_s_lb_val_0 #(
    .DataWidth( 8 ),
    .AddressRange( 256 ),
    .AddressWidth( 8 ))
lb_val_0_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .address0( lb_val_0_address0 ),
    .ce0( lb_val_0_ce0 ),
    .we0( lb_val_0_we0 ),
    .d0( lb_val_0_d0 ),
    .q0( lb_val_0_q0 )
);

EdgeDetect_Top_ImgProcess_0_0_0_256_256_s_lb_val_0 #(
    .DataWidth( 8 ),
    .AddressRange( 256 ),
    .AddressWidth( 8 ))
lb_val_1_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .address0( lb_val_1_address0 ),
    .ce0( lb_val_1_ce0 ),
    .we0( lb_val_1_we0 ),
    .d0( lb_val_1_d0 ),
    .q0( lb_val_1_q0 )
);

EdgeDetect_Top_ImgProcess_0_0_0_256_256_s_lb_val_0 #(
    .DataWidth( 8 ),
    .AddressRange( 256 ),
    .AddressWidth( 8 ))
lb_val_2_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .address0( lb_val_2_address0 ),
    .ce0( lb_val_2_ce0 ),
    .we0( lb_val_2_we0 ),
    .d0( lb_val_2_d0 ),
    .q0( lb_val_2_q0 )
);

EdgeDetect_Top_ImgProcess_0_0_0_256_256_s_empty #(
    .DataWidth( 8 ),
    .AddressRange( 9 ),
    .AddressWidth( 4 ))
empty_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .address0( empty_address0 ),
    .ce0( empty_ce0 ),
    .we0( empty_we0 ),
    .d0( empty_d0 ),
    .q0( empty_q0 ),
    .address1( empty_address1 ),
    .ce1( empty_ce1 ),
    .we1( empty_we1 ),
    .d1( empty_d1 )
);

EdgeDetect_Top_sobel_operation grp_EdgeDetect_Top_sobel_operation_fu_346(
    .ap_clk( ap_clk ),
    .ap_rst( ap_rst ),
    .ap_start( grp_EdgeDetect_Top_sobel_operation_fu_346_ap_start ),
    .ap_done( grp_EdgeDetect_Top_sobel_operation_fu_346_ap_done ),
    .ap_idle( grp_EdgeDetect_Top_sobel_operation_fu_346_ap_idle ),
    .ap_ready( grp_EdgeDetect_Top_sobel_operation_fu_346_ap_ready ),
    .data_val_address0( grp_EdgeDetect_Top_sobel_operation_fu_346_data_val_address0 ),
    .data_val_ce0( grp_EdgeDetect_Top_sobel_operation_fu_346_data_val_ce0 ),
    .data_val_q0( grp_EdgeDetect_Top_sobel_operation_fu_346_data_val_q0 ),
    .ap_return_0( grp_EdgeDetect_Top_sobel_operation_fu_346_ap_return_0 ),
    .ap_return_1( grp_EdgeDetect_Top_sobel_operation_fu_346_ap_return_1 )
);



always @ (posedge ap_clk) begin : ap_ret_ap_CS_fsm
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_st1_fsm_0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin : ap_ret_ap_done_reg
    if (ap_rst == 1'b1) begin
        ap_done_reg <= ap_const_logic_0;
    end else begin
        if ((ap_const_logic_1 == ap_continue)) begin
            ap_done_reg <= ap_const_logic_0;
        end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & ~(exitcond1_fu_391_p2 == ap_const_lv1_0))) begin
            ap_done_reg <= ap_const_logic_1;
        end
    end
end

always @ (posedge ap_clk) begin : ap_ret_grp_EdgeDetect_Top_sobel_operation_fu_346_ap_start_ap_start_reg
    if (ap_rst == 1'b1) begin
        grp_EdgeDetect_Top_sobel_operation_fu_346_ap_start_ap_start_reg <= ap_const_logic_0;
    end else begin
        if ((ap_const_logic_1 == ap_sig_cseq_ST_st11_fsm_10)) begin
            grp_EdgeDetect_Top_sobel_operation_fu_346_ap_start_ap_start_reg <= ap_const_logic_1;
        end else if ((ap_const_logic_1 == grp_EdgeDetect_Top_sobel_operation_fu_346_ap_ready)) begin
            grp_EdgeDetect_Top_sobel_operation_fu_346_ap_start_ap_start_reg <= ap_const_logic_0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st13_fsm_12) & ~ap_sig_bdd_252)) begin
        p_3_i_reg_310 <= p_V_reg_736;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond1_fu_391_p2 == ap_const_lv1_0))) begin
        p_3_i_reg_310 <= ap_const_lv10_0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2) & ~(ap_const_lv1_0 == exitcond_fu_435_p2))) begin
        p_i_reg_299 <= q_V_reg_713;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~ap_sig_bdd_58)) begin
        p_i_reg_299 <= ap_const_lv10_0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st6_fsm_5) & (ap_const_lv1_0 == or_cond2_i_fu_530_p2))) begin
        tmp_10_reg_334 <= ap_const_lv8_0;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st12_fsm_11) & ~(ap_const_lv1_0 == or_cond2_i_reg_800) & ~(~(ap_const_lv1_0 == or_cond2_i_reg_800) & (ap_const_logic_0 == grp_EdgeDetect_Top_sobel_operation_fu_346_ap_done)))) begin
        tmp_10_reg_334 <= edge_weight_fu_555_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st6_fsm_5) & (ap_const_lv1_0 == or_cond2_i_fu_530_p2))) begin
        tmp_12_reg_322 <= ap_const_lv8_0;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st12_fsm_11) & ~(ap_const_lv1_0 == or_cond2_i_reg_800) & ~(~(ap_const_lv1_0 == or_cond2_i_reg_800) & (ap_const_logic_0 == grp_EdgeDetect_Top_sobel_operation_fu_346_ap_done)))) begin
        tmp_12_reg_322 <= grp_EdgeDetect_Top_sobel_operation_fu_346_ap_return_1;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2) & (ap_const_lv1_0 == exitcond_fu_435_p2) & ~(ap_const_lv1_0 == tmp_140_i_fu_446_p2))) begin
        lb_val_1_addr_reg_760 <= tmp_141_i_fu_451_p1;
        tmp_141_i_reg_750[9 : 0] <= tmp_141_i_fu_451_p1[9 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st6_fsm_5)) begin
        or_cond2_i_reg_800 <= or_cond2_i_fu_530_p2;
        sw_val_0_0_1_reg_795 <= sw_val_0_0_1_fu_501_p3;
        sw_val_1_0_1_reg_789 <= sw_val_1_0_1_fu_494_p3;
        sw_val_1_1_load_reg_773 <= sw_val_1_1_fu_106;
        sw_val_2_0_1_reg_783 <= sw_val_2_0_1_fu_487_p3;
        sw_val_2_1_load_reg_778 <= sw_val_2_1_fu_114;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st12_fsm_11) & ~(~(ap_const_lv1_0 == or_cond2_i_reg_800) & (ap_const_logic_0 == grp_EdgeDetect_Top_sobel_operation_fu_346_ap_done)))) begin
        or_cond3_i_reg_814 <= or_cond3_i_fu_565_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2)) begin
        p_V_reg_736 <= p_V_fu_440_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1)) begin
        q_V_reg_713 <= q_V_fu_396_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3) & ~(ap_const_lv1_0 == brmerge_demorgan_i_fu_462_p2) & ~ap_sig_bdd_340)) begin
        sw_val_0_0_fu_94 <= p_src_data_stream_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st13_fsm_12) & ~ap_sig_bdd_252)) begin
        sw_val_0_1_1_fu_102 <= sw_val_0_1_fu_98;
        sw_val_0_1_fu_98 <= sw_val_0_0_1_reg_795;
        sw_val_1_1_1_fu_110 <= sw_val_1_1_fu_106;
        sw_val_1_1_fu_106 <= sw_val_1_0_1_reg_789;
        sw_val_2_1_1_fu_118 <= sw_val_2_1_fu_114;
        sw_val_2_1_fu_114 <= sw_val_2_0_1_reg_783;
    end
end

always @ (posedge ap_clk) begin
    if ((~(ap_const_lv1_0 == tmp_140_i_reg_741) & (ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3) & ~ap_sig_bdd_340)) begin
        sw_val_1_0_fu_90 <= lb_val_0_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond1_fu_391_p2 == ap_const_lv1_0))) begin
        tmp_136_i_reg_718 <= tmp_136_i_fu_402_p2;
        tmp_138_i_reg_723 <= tmp_138_i_fu_423_p2;
        tmp_reg_728 <= tmp_fu_429_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2) & (ap_const_lv1_0 == exitcond_fu_435_p2))) begin
        tmp_140_i_reg_741 <= tmp_140_i_fu_446_p2;
    end
end

always @ (ap_done_reg or ap_sig_cseq_ST_st2_fsm_1 or exitcond1_fu_391_p2) begin
    if (((ap_const_logic_1 == ap_done_reg) | ((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & ~(exitcond1_fu_391_p2 == ap_const_lv1_0)))) begin
        ap_done = ap_const_logic_1;
    end else begin
        ap_done = ap_const_logic_0;
    end
end

always @ (ap_start or ap_sig_cseq_ST_st1_fsm_0) begin
    if ((~(ap_const_logic_1 == ap_start) & (ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0))) begin
        ap_idle = ap_const_logic_1;
    end else begin
        ap_idle = ap_const_logic_0;
    end
end

always @ (ap_sig_cseq_ST_st2_fsm_1 or exitcond1_fu_391_p2) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & ~(exitcond1_fu_391_p2 == ap_const_lv1_0))) begin
        ap_ready = ap_const_logic_1;
    end else begin
        ap_ready = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_395) begin
    if (ap_sig_bdd_395) begin
        ap_sig_cseq_ST_st10_fsm_9 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st10_fsm_9 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_269) begin
    if (ap_sig_bdd_269) begin
        ap_sig_cseq_ST_st11_fsm_10 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st11_fsm_10 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_166) begin
    if (ap_sig_bdd_166) begin
        ap_sig_cseq_ST_st12_fsm_11 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st12_fsm_11 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_244) begin
    if (ap_sig_bdd_244) begin
        ap_sig_cseq_ST_st13_fsm_12 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st13_fsm_12 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_32) begin
    if (ap_sig_bdd_32) begin
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_92) begin
    if (ap_sig_bdd_92) begin
        ap_sig_cseq_ST_st2_fsm_1 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st2_fsm_1 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_111) begin
    if (ap_sig_bdd_111) begin
        ap_sig_cseq_ST_st3_fsm_2 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st3_fsm_2 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_327) begin
    if (ap_sig_bdd_327) begin
        ap_sig_cseq_ST_st4_fsm_3 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st4_fsm_3 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_135) begin
    if (ap_sig_bdd_135) begin
        ap_sig_cseq_ST_st5_fsm_4 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st5_fsm_4 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_147) begin
    if (ap_sig_bdd_147) begin
        ap_sig_cseq_ST_st6_fsm_5 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st6_fsm_5 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_369) begin
    if (ap_sig_bdd_369) begin
        ap_sig_cseq_ST_st7_fsm_6 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st7_fsm_6 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_382) begin
    if (ap_sig_bdd_382) begin
        ap_sig_cseq_ST_st8_fsm_7 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st8_fsm_7 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_412) begin
    if (ap_sig_bdd_412) begin
        ap_sig_cseq_ST_st9_fsm_8 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st9_fsm_8 = ap_const_logic_0;
    end
end

always @ (p_addr_reg_645 or p_addr_2_reg_655 or p_addr_4_reg_665 or p_addr_6_reg_675 or p_addr_8_reg_685 or ap_sig_cseq_ST_st6_fsm_5 or or_cond2_i_reg_800 or ap_sig_cseq_ST_st12_fsm_11 or grp_EdgeDetect_Top_sobel_operation_fu_346_data_val_address0 or ap_sig_cseq_ST_st7_fsm_6 or ap_sig_cseq_ST_st8_fsm_7 or ap_sig_cseq_ST_st10_fsm_9 or ap_sig_cseq_ST_st9_fsm_8) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st10_fsm_9)) begin
        empty_address0 = p_addr_8_reg_685;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st9_fsm_8)) begin
        empty_address0 = p_addr_6_reg_675;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st8_fsm_7)) begin
        empty_address0 = p_addr_4_reg_665;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st7_fsm_6)) begin
        empty_address0 = p_addr_2_reg_655;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st6_fsm_5)) begin
        empty_address0 = p_addr_reg_645;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st12_fsm_11) & ~(ap_const_lv1_0 == or_cond2_i_reg_800))) begin
        empty_address0 = grp_EdgeDetect_Top_sobel_operation_fu_346_data_val_address0;
    end else begin
        empty_address0 = 'bx;
    end
end

always @ (p_addr_1_reg_650 or p_addr_3_reg_660 or p_addr_5_reg_670 or p_addr_7_reg_680 or ap_sig_cseq_ST_st6_fsm_5 or ap_sig_cseq_ST_st7_fsm_6 or ap_sig_cseq_ST_st8_fsm_7 or ap_sig_cseq_ST_st9_fsm_8) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st9_fsm_8)) begin
        empty_address1 = p_addr_7_reg_680;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st8_fsm_7)) begin
        empty_address1 = p_addr_5_reg_670;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st7_fsm_6)) begin
        empty_address1 = p_addr_3_reg_660;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st6_fsm_5)) begin
        empty_address1 = p_addr_1_reg_650;
    end else begin
        empty_address1 = 'bx;
    end
end

always @ (ap_sig_cseq_ST_st6_fsm_5 or or_cond2_i_reg_800 or ap_sig_cseq_ST_st12_fsm_11 or grp_EdgeDetect_Top_sobel_operation_fu_346_data_val_ce0 or ap_sig_cseq_ST_st7_fsm_6 or ap_sig_cseq_ST_st8_fsm_7 or ap_sig_cseq_ST_st10_fsm_9 or ap_sig_cseq_ST_st9_fsm_8) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st6_fsm_5) | (ap_const_logic_1 == ap_sig_cseq_ST_st7_fsm_6) | (ap_const_logic_1 == ap_sig_cseq_ST_st8_fsm_7) | (ap_const_logic_1 == ap_sig_cseq_ST_st10_fsm_9) | (ap_const_logic_1 == ap_sig_cseq_ST_st9_fsm_8))) begin
        empty_ce0 = ap_const_logic_1;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st12_fsm_11) & ~(ap_const_lv1_0 == or_cond2_i_reg_800))) begin
        empty_ce0 = grp_EdgeDetect_Top_sobel_operation_fu_346_data_val_ce0;
    end else begin
        empty_ce0 = ap_const_logic_0;
    end
end

always @ (ap_sig_cseq_ST_st6_fsm_5 or ap_sig_cseq_ST_st7_fsm_6 or ap_sig_cseq_ST_st8_fsm_7 or ap_sig_cseq_ST_st9_fsm_8) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st6_fsm_5) | (ap_const_logic_1 == ap_sig_cseq_ST_st7_fsm_6) | (ap_const_logic_1 == ap_sig_cseq_ST_st8_fsm_7) | (ap_const_logic_1 == ap_sig_cseq_ST_st9_fsm_8))) begin
        empty_ce1 = ap_const_logic_1;
    end else begin
        empty_ce1 = ap_const_logic_0;
    end
end

always @ (sw_val_1_1_load_reg_773 or ap_sig_cseq_ST_st6_fsm_5 or sw_val_2_0_1_reg_783 or sw_val_0_0_1_fu_501_p3 or sw_val_0_1_1_fu_102 or ap_sig_cseq_ST_st7_fsm_6 or ap_sig_cseq_ST_st8_fsm_7 or sw_val_2_1_1_fu_118 or ap_sig_cseq_ST_st10_fsm_9 or ap_sig_cseq_ST_st9_fsm_8) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st10_fsm_9)) begin
        empty_d0 = sw_val_2_1_1_fu_118;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st9_fsm_8)) begin
        empty_d0 = sw_val_2_0_1_reg_783;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st8_fsm_7)) begin
        empty_d0 = sw_val_1_1_load_reg_773;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st7_fsm_6)) begin
        empty_d0 = sw_val_0_1_1_fu_102;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st6_fsm_5)) begin
        empty_d0 = sw_val_0_0_1_fu_501_p3;
    end else begin
        empty_d0 = 'bx;
    end
end

always @ (ap_sig_cseq_ST_st6_fsm_5 or sw_val_2_1_load_reg_778 or sw_val_1_0_1_reg_789 or sw_val_0_1_fu_98 or ap_sig_cseq_ST_st7_fsm_6 or sw_val_1_1_1_fu_110 or ap_sig_cseq_ST_st8_fsm_7 or ap_sig_cseq_ST_st9_fsm_8) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st9_fsm_8)) begin
        empty_d1 = sw_val_2_1_load_reg_778;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st8_fsm_7)) begin
        empty_d1 = sw_val_1_1_1_fu_110;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st7_fsm_6)) begin
        empty_d1 = sw_val_1_0_1_reg_789;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st6_fsm_5)) begin
        empty_d1 = sw_val_0_1_fu_98;
    end else begin
        empty_d1 = 'bx;
    end
end

always @ (ap_sig_cseq_ST_st6_fsm_5 or or_cond2_i_fu_530_p2 or ap_sig_cseq_ST_st7_fsm_6 or ap_sig_cseq_ST_st8_fsm_7 or ap_sig_cseq_ST_st10_fsm_9 or ap_sig_cseq_ST_st9_fsm_8) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st7_fsm_6) | (ap_const_logic_1 == ap_sig_cseq_ST_st8_fsm_7) | (ap_const_logic_1 == ap_sig_cseq_ST_st10_fsm_9) | ((ap_const_logic_1 == ap_sig_cseq_ST_st6_fsm_5) & ~(ap_const_lv1_0 == or_cond2_i_fu_530_p2)) | (ap_const_logic_1 == ap_sig_cseq_ST_st9_fsm_8))) begin
        empty_we0 = ap_const_logic_1;
    end else begin
        empty_we0 = ap_const_logic_0;
    end
end

always @ (ap_sig_cseq_ST_st6_fsm_5 or or_cond2_i_fu_530_p2 or ap_sig_cseq_ST_st7_fsm_6 or ap_sig_cseq_ST_st8_fsm_7 or ap_sig_cseq_ST_st9_fsm_8) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st7_fsm_6) | (ap_const_logic_1 == ap_sig_cseq_ST_st8_fsm_7) | ((ap_const_logic_1 == ap_sig_cseq_ST_st6_fsm_5) & ~(ap_const_lv1_0 == or_cond2_i_fu_530_p2)) | (ap_const_logic_1 == ap_sig_cseq_ST_st9_fsm_8))) begin
        empty_we1 = ap_const_logic_1;
    end else begin
        empty_we1 = ap_const_logic_0;
    end
end

always @ (ap_sig_cseq_ST_st3_fsm_2 or tmp_141_i_fu_451_p1 or ap_sig_cseq_ST_st4_fsm_3 or tmp_142_i_fu_466_p1) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        lb_val_0_address0 = tmp_142_i_fu_466_p1;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2)) begin
        lb_val_0_address0 = tmp_141_i_fu_451_p1;
    end else begin
        lb_val_0_address0 = 'bx;
    end
end

always @ (ap_sig_cseq_ST_st3_fsm_2 or ap_sig_cseq_ST_st4_fsm_3 or ap_sig_bdd_340) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2) | ((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3) & ~ap_sig_bdd_340))) begin
        lb_val_0_ce0 = ap_const_logic_1;
    end else begin
        lb_val_0_ce0 = ap_const_logic_0;
    end
end

always @ (ap_sig_cseq_ST_st4_fsm_3 or brmerge_demorgan_i_fu_462_p2 or ap_sig_bdd_340) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3) & ~(ap_const_lv1_0 == brmerge_demorgan_i_fu_462_p2) & ~ap_sig_bdd_340)) begin
        lb_val_0_we0 = ap_const_logic_1;
    end else begin
        lb_val_0_we0 = ap_const_logic_0;
    end
end

always @ (ap_sig_cseq_ST_st3_fsm_2 or tmp_141_i_fu_451_p1 or lb_val_1_addr_reg_760 or ap_sig_cseq_ST_st4_fsm_3) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        lb_val_1_address0 = lb_val_1_addr_reg_760;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2)) begin
        lb_val_1_address0 = tmp_141_i_fu_451_p1;
    end else begin
        lb_val_1_address0 = 'bx;
    end
end

always @ (ap_sig_cseq_ST_st3_fsm_2 or ap_sig_cseq_ST_st4_fsm_3 or ap_sig_bdd_340) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2) | ((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3) & ~ap_sig_bdd_340))) begin
        lb_val_1_ce0 = ap_const_logic_1;
    end else begin
        lb_val_1_ce0 = ap_const_logic_0;
    end
end

always @ (tmp_140_i_reg_741 or ap_sig_cseq_ST_st4_fsm_3 or ap_sig_bdd_340) begin
    if ((~(ap_const_lv1_0 == tmp_140_i_reg_741) & (ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3) & ~ap_sig_bdd_340)) begin
        lb_val_1_we0 = ap_const_logic_1;
    end else begin
        lb_val_1_we0 = ap_const_logic_0;
    end
end

always @ (tmp_141_i_reg_750 or ap_sig_cseq_ST_st5_fsm_4 or ap_sig_cseq_ST_st4_fsm_3 or tmp_143_i_fu_476_p1) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        lb_val_2_address0 = tmp_141_i_reg_750;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st5_fsm_4)) begin
        lb_val_2_address0 = tmp_143_i_fu_476_p1;
    end else begin
        lb_val_2_address0 = 'bx;
    end
end

always @ (ap_sig_cseq_ST_st5_fsm_4 or ap_sig_cseq_ST_st4_fsm_3 or ap_sig_bdd_340) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st5_fsm_4) | ((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3) & ~ap_sig_bdd_340))) begin
        lb_val_2_ce0 = ap_const_logic_1;
    end else begin
        lb_val_2_ce0 = ap_const_logic_0;
    end
end

always @ (tmp_140_i_reg_741 or ap_sig_cseq_ST_st4_fsm_3 or ap_sig_bdd_340) begin
    if ((~(ap_const_lv1_0 == tmp_140_i_reg_741) & (ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3) & ~ap_sig_bdd_340)) begin
        lb_val_2_we0 = ap_const_logic_1;
    end else begin
        lb_val_2_we0 = ap_const_logic_0;
    end
end

always @ (or_cond3_i_reg_814 or ap_sig_cseq_ST_st13_fsm_12 or ap_sig_bdd_252) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st13_fsm_12) & (ap_const_lv1_0 == or_cond3_i_reg_814) & ~ap_sig_bdd_252)) begin
        p_dir_data_stream_V_write = ap_const_logic_1;
    end else begin
        p_dir_data_stream_V_write = ap_const_logic_0;
    end
end

always @ (ap_sig_cseq_ST_st4_fsm_3 or brmerge_demorgan_i_fu_462_p2 or ap_sig_bdd_340) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3) & ~(ap_const_lv1_0 == brmerge_demorgan_i_fu_462_p2) & ~ap_sig_bdd_340)) begin
        p_src_data_stream_V_read = ap_const_logic_1;
    end else begin
        p_src_data_stream_V_read = ap_const_logic_0;
    end
end

always @ (or_cond3_i_reg_814 or ap_sig_cseq_ST_st13_fsm_12 or ap_sig_bdd_252) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st13_fsm_12) & (ap_const_lv1_0 == or_cond3_i_reg_814) & ~ap_sig_bdd_252)) begin
        p_temp_data_stream_V_write = ap_const_logic_1;
    end else begin
        p_temp_data_stream_V_write = ap_const_logic_0;
    end
end
always @ (ap_CS_fsm or ap_sig_bdd_58 or exitcond1_fu_391_p2 or exitcond_fu_435_p2 or or_cond2_i_fu_530_p2 or or_cond2_i_reg_800 or grp_EdgeDetect_Top_sobel_operation_fu_346_ap_done or ap_sig_bdd_252 or ap_sig_bdd_340) begin
    case (ap_CS_fsm)
        ap_ST_st1_fsm_0 : 
        begin
            if (~ap_sig_bdd_58) begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end else begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end
        end
        ap_ST_st2_fsm_1 : 
        begin
            if (~(exitcond1_fu_391_p2 == ap_const_lv1_0)) begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end else begin
                ap_NS_fsm = ap_ST_st3_fsm_2;
            end
        end
        ap_ST_st3_fsm_2 : 
        begin
            if (~(ap_const_lv1_0 == exitcond_fu_435_p2)) begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end else begin
                ap_NS_fsm = ap_ST_st4_fsm_3;
            end
        end
        ap_ST_st4_fsm_3 : 
        begin
            if (~ap_sig_bdd_340) begin
                ap_NS_fsm = ap_ST_st5_fsm_4;
            end else begin
                ap_NS_fsm = ap_ST_st4_fsm_3;
            end
        end
        ap_ST_st5_fsm_4 : 
        begin
            ap_NS_fsm = ap_ST_st6_fsm_5;
        end
        ap_ST_st6_fsm_5 : 
        begin
            if ((ap_const_lv1_0 == or_cond2_i_fu_530_p2)) begin
                ap_NS_fsm = ap_ST_st12_fsm_11;
            end else begin
                ap_NS_fsm = ap_ST_st7_fsm_6;
            end
        end
        ap_ST_st7_fsm_6 : 
        begin
            ap_NS_fsm = ap_ST_st8_fsm_7;
        end
        ap_ST_st8_fsm_7 : 
        begin
            ap_NS_fsm = ap_ST_st9_fsm_8;
        end
        ap_ST_st9_fsm_8 : 
        begin
            ap_NS_fsm = ap_ST_st10_fsm_9;
        end
        ap_ST_st10_fsm_9 : 
        begin
            ap_NS_fsm = ap_ST_st11_fsm_10;
        end
        ap_ST_st11_fsm_10 : 
        begin
            ap_NS_fsm = ap_ST_st12_fsm_11;
        end
        ap_ST_st12_fsm_11 : 
        begin
            if (~(~(ap_const_lv1_0 == or_cond2_i_reg_800) & (ap_const_logic_0 == grp_EdgeDetect_Top_sobel_operation_fu_346_ap_done))) begin
                ap_NS_fsm = ap_ST_st13_fsm_12;
            end else begin
                ap_NS_fsm = ap_ST_st12_fsm_11;
            end
        end
        ap_ST_st13_fsm_12 : 
        begin
            if (~ap_sig_bdd_252) begin
                ap_NS_fsm = ap_ST_st3_fsm_2;
            end else begin
                ap_NS_fsm = ap_ST_st13_fsm_12;
            end
        end
        default : 
        begin
            ap_NS_fsm = 'bx;
        end
    endcase
end



always @ (ap_CS_fsm) begin
    ap_sig_bdd_111 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_2]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_135 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_4]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_147 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_5]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_166 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_B]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_244 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_C]);
end


always @ (p_temp_data_stream_V_full_n or p_dir_data_stream_V_full_n or or_cond3_i_reg_814) begin
    ap_sig_bdd_252 = (((p_temp_data_stream_V_full_n == ap_const_logic_0) & (ap_const_lv1_0 == or_cond3_i_reg_814)) | ((ap_const_lv1_0 == or_cond3_i_reg_814) & (p_dir_data_stream_V_full_n == ap_const_logic_0)));
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_269 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_A]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_32 = (ap_CS_fsm[ap_const_lv32_0] == ap_const_lv1_1);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_327 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_3]);
end


always @ (p_src_data_stream_V_empty_n or brmerge_demorgan_i_fu_462_p2) begin
    ap_sig_bdd_340 = (~(ap_const_lv1_0 == brmerge_demorgan_i_fu_462_p2) & (p_src_data_stream_V_empty_n == ap_const_logic_0));
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_369 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_6]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_382 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_7]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_395 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_9]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_412 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_8]);
end


always @ (ap_start or ap_done_reg) begin
    ap_sig_bdd_58 = ((ap_start == ap_const_logic_0) | (ap_done_reg == ap_const_logic_1));
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_92 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_1]);
end

assign brmerge_demorgan_i_fu_462_p2 = (tmp_136_i_reg_718 & tmp_140_i_reg_741);

assign edge_weight_fu_555_p1 = grp_EdgeDetect_Top_sobel_operation_fu_346_ap_return_0[7:0];

assign exitcond1_fu_391_p2 = (p_i_reg_299 == tmp_7_fu_385_p2? 1'b1: 1'b0);

assign exitcond_fu_435_p2 = (p_3_i_reg_310 == tmp_4_fu_375_p2? 1'b1: 1'b0);

assign grp_EdgeDetect_Top_sobel_operation_fu_346_ap_start = grp_EdgeDetect_Top_sobel_operation_fu_346_ap_start_ap_start_reg;

assign grp_EdgeDetect_Top_sobel_operation_fu_346_data_val_q0 = empty_q0;

assign icmp2_fu_519_p2 = (tmp_108_fu_509_p4 != ap_const_lv9_0? 1'b1: 1'b0);

assign icmp_fu_417_p2 = (tmp_106_fu_407_p4 != ap_const_lv9_0? 1'b1: 1'b0);

assign lb_val_0_d0 = p_src_data_stream_V_dout;

assign lb_val_1_d0 = lb_val_0_q0;

assign lb_val_2_d0 = lb_val_1_q0;

assign or_cond2_i_fu_530_p2 = (tmp1_fu_525_p2 & tmp_reg_728);

assign or_cond3_i_fu_565_p2 = (tmp_138_i_reg_723 | tmp_146_i_fu_559_p2);

assign p_V_fu_440_p2 = (p_3_i_reg_310 + ap_const_lv10_1);

assign p_addr_1_gep_fu_178_p3 = ap_const_lv64_1;

assign p_addr_2_gep_fu_186_p3 = ap_const_lv64_2;

assign p_addr_3_gep_fu_194_p3 = ap_const_lv64_3;

assign p_addr_4_gep_fu_202_p3 = ap_const_lv64_4;

assign p_addr_5_gep_fu_210_p3 = ap_const_lv64_5;

assign p_addr_6_gep_fu_218_p3 = ap_const_lv64_6;

assign p_addr_7_gep_fu_226_p3 = ap_const_lv64_7;

assign p_addr_8_gep_fu_234_p3 = ap_const_lv64_8;

assign p_addr_gep_fu_170_p3 = ap_const_lv64_0;

assign p_dir_data_stream_V_din = tmp_12_reg_322;

assign p_temp_data_stream_V_din = tmp_10_reg_334;

assign q_V_fu_396_p2 = (p_i_reg_299 + ap_const_lv10_1);

assign sw_val_0_0_1_fu_501_p3 = ((tmp_140_i_reg_741[0:0] === 1'b1) ? sw_val_0_0_fu_94 : sw_val_0_1_fu_98);

assign sw_val_1_0_1_fu_494_p3 = ((tmp_140_i_reg_741[0:0] === 1'b1) ? sw_val_1_0_fu_90 : sw_val_1_1_fu_106);

assign sw_val_2_0_1_fu_487_p3 = ((tmp_140_i_reg_741[0:0] === 1'b1) ? lb_val_2_q0 : sw_val_2_1_fu_114);

assign tmp1_fu_525_p2 = (icmp2_fu_519_p2 & tmp_140_i_reg_741);

assign tmp_106_fu_407_p4 = {{p_i_reg_299[ap_const_lv32_9 : ap_const_lv32_1]}};

assign tmp_108_fu_509_p4 = {{p_3_i_reg_310[ap_const_lv32_9 : ap_const_lv32_1]}};

assign tmp_136_i_fu_402_p2 = (p_i_reg_299 < tmp_6_fu_381_p1? 1'b1: 1'b0);

assign tmp_138_i_fu_423_p2 = (p_i_reg_299 == ap_const_lv10_0? 1'b1: 1'b0);

assign tmp_140_i_fu_446_p2 = (p_3_i_reg_310 < tmp_3_fu_371_p1? 1'b1: 1'b0);

assign tmp_141_i_fu_451_p1 = p_3_i_reg_310;

assign tmp_142_i_fu_466_p1 = p_3_i_reg_310;

assign tmp_143_i_fu_476_p1 = p_3_i_reg_310;

assign tmp_146_i_fu_559_p2 = (p_3_i_reg_310 == ap_const_lv10_0? 1'b1: 1'b0);

assign tmp_3_fu_371_p1 = width;

assign tmp_4_fu_375_p2 = (tmp_3_fu_371_p1 + ap_const_lv10_1);

assign tmp_6_fu_381_p1 = height;

assign tmp_7_fu_385_p2 = (tmp_6_fu_381_p1 + ap_const_lv10_1);

assign tmp_fu_429_p2 = (icmp_fu_417_p2 & tmp_136_i_fu_402_p2);
always @ (posedge ap_clk) begin
    p_addr_reg_645[3:0] <= 4'b0000;
    p_addr_1_reg_650[3:0] <= 4'b0001;
    p_addr_2_reg_655[3:0] <= 4'b0010;
    p_addr_3_reg_660[3:0] <= 4'b0011;
    p_addr_4_reg_665[3:0] <= 4'b0100;
    p_addr_5_reg_670[3:0] <= 4'b0101;
    p_addr_6_reg_675[3:0] <= 4'b0110;
    p_addr_7_reg_680[3:0] <= 4'b0111;
    p_addr_8_reg_685[3:0] <= 4'b1000;
    tmp_141_i_reg_750[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
end



endmodule //EdgeDetect_Top_ImgProcess_0_0_0_256_256_s

