// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2015.4
// Copyright (C) 2015 Xilinx Inc. All rights reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module EdgeDetect_Top_GetCircles (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        img_accu_address0,
        img_accu_ce0,
        img_accu_q0,
        threshold,
        ap_return
);

parameter    ap_const_logic_1 = 1'b1;
parameter    ap_const_logic_0 = 1'b0;
parameter    ap_ST_st1_fsm_0 = 7'b1;
parameter    ap_ST_st2_fsm_1 = 7'b10;
parameter    ap_ST_st3_fsm_2 = 7'b100;
parameter    ap_ST_st4_fsm_3 = 7'b1000;
parameter    ap_ST_st5_fsm_4 = 7'b10000;
parameter    ap_ST_st6_fsm_5 = 7'b100000;
parameter    ap_ST_st7_fsm_6 = 7'b1000000;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    ap_const_lv1_1 = 1'b1;
parameter    ap_const_lv32_1 = 32'b1;
parameter    ap_const_lv1_0 = 1'b0;
parameter    ap_const_lv32_2 = 32'b10;
parameter    ap_const_lv32_3 = 32'b11;
parameter    ap_const_lv32_5 = 32'b101;
parameter    ap_const_lv32_6 = 32'b110;
parameter    ap_const_lv9_0 = 9'b000000000;
parameter    ap_const_lv32_4 = 32'b100;
parameter    ap_const_lv32_FFFFFFFC = 32'b11111111111111111111111111111100;
parameter    ap_const_lv9_100 = 9'b100000000;
parameter    ap_const_lv9_1 = 9'b1;
parameter    ap_const_lv8_0 = 8'b00000000;
parameter    ap_const_lv32_1F = 32'b11111;
parameter    ap_const_lv32_8 = 32'b1000;
parameter    ap_const_lv24_1 = 24'b1;
parameter    ap_true = 1'b1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [15:0] img_accu_address0;
output   img_accu_ce0;
input  [15:0] img_accu_q0;
input  [31:0] threshold;
output  [31:0] ap_return;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[15:0] img_accu_address0;
reg img_accu_ce0;
(* fsm_encoding = "none" *) reg   [6:0] ap_CS_fsm = 7'b1;
reg    ap_sig_cseq_ST_st1_fsm_0;
reg    ap_sig_bdd_25;
wire   [31:0] b_cast5_fu_163_p1;
reg   [31:0] b_cast5_reg_472;
reg    ap_sig_cseq_ST_st2_fsm_1;
reg    ap_sig_bdd_50;
wire   [8:0] b_1_fu_173_p2;
reg   [8:0] b_1_reg_480;
wire   [15:0] tmp_s_fu_183_p3;
reg   [15:0] tmp_s_reg_485;
wire   [0:0] exitcond1_fu_167_p2;
wire   [31:0] a_cast3_fu_191_p1;
reg   [31:0] a_cast3_reg_490;
reg    ap_sig_cseq_ST_st3_fsm_2;
reg    ap_sig_bdd_67;
wire   [8:0] a_1_fu_205_p2;
reg   [8:0] a_1_reg_498;
wire   [0:0] exitcond_fu_199_p2;
wire   [31:0] max_fu_221_p1;
reg   [31:0] max_reg_508;
reg    ap_sig_cseq_ST_st4_fsm_3;
reg    ap_sig_bdd_83;
wire   [0:0] tmp_61_fu_225_p2;
reg   [0:0] tmp_61_reg_514;
reg    ap_sig_cseq_ST_st6_fsm_5;
reg    ap_sig_bdd_94;
wire   [0:0] tmp_64_fu_260_p2;
wire   [0:0] sel_tmp2_fu_375_p2;
reg   [0:0] sel_tmp2_reg_529;
wire   [31:0] ly_2_fu_381_p2;
wire   [31:0] max_3_fu_433_p3;
reg    ap_sig_cseq_ST_st7_fsm_6;
reg    ap_sig_bdd_112;
wire   [31:0] ly_3_fu_440_p3;
wire   [31:0] lx_1_fu_454_p2;
reg   [8:0] b_reg_76;
reg   [8:0] a_reg_87;
reg    ap_sig_cseq_ST_st5_fsm_4;
reg    ap_sig_bdd_130;
wire   [0:0] tmp_62_fu_230_p2;
reg   [31:0] max1_reg_98;
reg   [31:0] ly_reg_108;
reg   [31:0] max_1_reg_120;
reg   [31:0] ly_1_reg_132;
reg   [31:0] lx_reg_143;
wire   [63:0] tmp_60_fu_216_p1;
wire   [63:0] tmp_69_fu_358_p1;
reg   [31:0] found_fu_46;
wire   [31:0] found_1_s_fu_247_p3;
wire   [7:0] tmp_119_fu_179_p1;
wire   [15:0] a_cast2_fu_195_p1;
wire   [15:0] tmp_59_fu_211_p2;
wire   [0:0] tmp_63_fu_236_p2;
wire   [31:0] found_1_fu_241_p2;
wire   [31:0] tmp_65_fu_266_p2;
wire   [0:0] tmp_120_fu_271_p3;
wire   [23:0] tmp_121_fu_285_p4;
wire   [31:0] tmp_66_fu_301_p2;
wire   [0:0] tmp_122_fu_306_p3;
wire   [23:0] tmp_123_fu_320_p4;
wire   [7:0] tmp_124_fu_336_p1;
wire   [15:0] tmp_67_fu_340_p3;
wire   [31:0] tmp_185_cast_fu_348_p1;
wire   [31:0] tmp_68_fu_352_p2;
wire   [0:0] icmp_fu_295_p2;
wire   [0:0] rev_fu_279_p2;
wire   [0:0] icmp4_fu_330_p2;
wire   [0:0] rev2_fu_314_p2;
wire   [0:0] tmp12_fu_369_p2;
wire   [0:0] tmp_fu_363_p2;
wire   [31:0] max_2_fu_387_p1;
wire   [0:0] tmp_70_fu_395_p2;
wire   [30:0] max_2_cast_fu_391_p1;
wire   [30:0] tmp_125_fu_401_p1;
wire   [30:0] max_2_max_1_fu_405_p3;
wire   [31:0] max_2_max_1_cast_fu_413_p1;
wire   [31:0] p_ly_1_fu_417_p3;
wire   [31:0] p_lx_fu_425_p3;
wire   [31:0] lx_2_fu_447_p3;
reg   [6:0] ap_NS_fsm;




always @ (posedge ap_clk) begin : ap_ret_ap_CS_fsm
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_st1_fsm_0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st5_fsm_4) & (~(ap_const_lv1_0 == tmp_61_reg_514) | (ap_const_lv1_0 == tmp_62_fu_230_p2)))) begin
        a_reg_87 <= a_1_reg_498;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond1_fu_167_p2 == ap_const_lv1_0))) begin
        a_reg_87 <= ap_const_lv9_0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2) & ~(ap_const_lv1_0 == exitcond_fu_199_p2))) begin
        b_reg_76 <= b_1_reg_480;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == ap_const_logic_0))) begin
        b_reg_76 <= ap_const_lv9_0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st5_fsm_4) & (ap_const_lv1_0 == tmp_61_reg_514) & (ap_const_lv1_0 == tmp_62_fu_230_p2))) begin
        found_fu_46 <= found_1_s_fu_247_p3;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == ap_const_logic_0))) begin
        found_fu_46 <= ap_const_lv32_0;
    end
end

always @ (posedge ap_clk) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st7_fsm_6)) begin
        lx_reg_143 <= lx_1_fu_454_p2;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st5_fsm_4) & (ap_const_lv1_0 == tmp_61_reg_514) & ~(ap_const_lv1_0 == tmp_62_fu_230_p2))) begin
        lx_reg_143 <= ap_const_lv32_FFFFFFFC;
    end
end

always @ (posedge ap_clk) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st7_fsm_6)) begin
        ly_1_reg_132 <= ly_3_fu_440_p3;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st5_fsm_4) & (ap_const_lv1_0 == tmp_61_reg_514) & ~(ap_const_lv1_0 == tmp_62_fu_230_p2))) begin
        ly_1_reg_132 <= ly_reg_108;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3) & (ap_const_lv1_0 == tmp_61_fu_225_p2))) begin
        ly_reg_108 <= ap_const_lv32_FFFFFFFC;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st6_fsm_5) & (ap_const_lv1_0 == tmp_64_fu_260_p2))) begin
        ly_reg_108 <= ly_2_fu_381_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3) & (ap_const_lv1_0 == tmp_61_fu_225_p2))) begin
        max1_reg_98 <= max_fu_221_p1;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st6_fsm_5) & (ap_const_lv1_0 == tmp_64_fu_260_p2))) begin
        max1_reg_98 <= max_1_reg_120;
    end
end

always @ (posedge ap_clk) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st7_fsm_6)) begin
        max_1_reg_120 <= max_3_fu_433_p3;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st5_fsm_4) & (ap_const_lv1_0 == tmp_61_reg_514) & ~(ap_const_lv1_0 == tmp_62_fu_230_p2))) begin
        max_1_reg_120 <= max1_reg_98;
    end
end

always @ (posedge ap_clk) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2)) begin
        a_1_reg_498 <= a_1_fu_205_p2;
        a_cast3_reg_490[8 : 0] <= a_cast3_fu_191_p1[8 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1)) begin
        b_1_reg_480 <= b_1_fu_173_p2;
        b_cast5_reg_472[8 : 0] <= b_cast5_fu_163_p1[8 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        max_reg_508[15 : 0] <= max_fu_221_p1[15 : 0];
        tmp_61_reg_514 <= tmp_61_fu_225_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st6_fsm_5) & ~(ap_const_lv1_0 == tmp_64_fu_260_p2))) begin
        sel_tmp2_reg_529 <= sel_tmp2_fu_375_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond1_fu_167_p2 == ap_const_lv1_0))) begin
        tmp_s_reg_485[15 : 8] <= tmp_s_fu_183_p3[15 : 8];
    end
end

always @ (ap_start or ap_sig_cseq_ST_st1_fsm_0 or ap_sig_cseq_ST_st2_fsm_1 or exitcond1_fu_167_p2) begin
    if (((~(ap_const_logic_1 == ap_start) & (ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0)) | ((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & ~(exitcond1_fu_167_p2 == ap_const_lv1_0)))) begin
        ap_done = ap_const_logic_1;
    end else begin
        ap_done = ap_const_logic_0;
    end
end

always @ (ap_start or ap_sig_cseq_ST_st1_fsm_0) begin
    if ((~(ap_const_logic_1 == ap_start) & (ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0))) begin
        ap_idle = ap_const_logic_1;
    end else begin
        ap_idle = ap_const_logic_0;
    end
end

always @ (ap_sig_cseq_ST_st2_fsm_1 or exitcond1_fu_167_p2) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & ~(exitcond1_fu_167_p2 == ap_const_lv1_0))) begin
        ap_ready = ap_const_logic_1;
    end else begin
        ap_ready = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_25) begin
    if (ap_sig_bdd_25) begin
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_50) begin
    if (ap_sig_bdd_50) begin
        ap_sig_cseq_ST_st2_fsm_1 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st2_fsm_1 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_67) begin
    if (ap_sig_bdd_67) begin
        ap_sig_cseq_ST_st3_fsm_2 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st3_fsm_2 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_83) begin
    if (ap_sig_bdd_83) begin
        ap_sig_cseq_ST_st4_fsm_3 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st4_fsm_3 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_130) begin
    if (ap_sig_bdd_130) begin
        ap_sig_cseq_ST_st5_fsm_4 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st5_fsm_4 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_94) begin
    if (ap_sig_bdd_94) begin
        ap_sig_cseq_ST_st6_fsm_5 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st6_fsm_5 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_112) begin
    if (ap_sig_bdd_112) begin
        ap_sig_cseq_ST_st7_fsm_6 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st7_fsm_6 = ap_const_logic_0;
    end
end

always @ (ap_sig_cseq_ST_st3_fsm_2 or ap_sig_cseq_ST_st6_fsm_5 or tmp_60_fu_216_p1 or tmp_69_fu_358_p1) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st6_fsm_5)) begin
        img_accu_address0 = tmp_69_fu_358_p1;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2)) begin
        img_accu_address0 = tmp_60_fu_216_p1;
    end else begin
        img_accu_address0 = 'bx;
    end
end

always @ (ap_sig_cseq_ST_st3_fsm_2 or ap_sig_cseq_ST_st6_fsm_5) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2) | (ap_const_logic_1 == ap_sig_cseq_ST_st6_fsm_5))) begin
        img_accu_ce0 = ap_const_logic_1;
    end else begin
        img_accu_ce0 = ap_const_logic_0;
    end
end
always @ (ap_start or ap_CS_fsm or exitcond1_fu_167_p2 or exitcond_fu_199_p2 or tmp_61_reg_514 or tmp_64_fu_260_p2 or tmp_62_fu_230_p2) begin
    case (ap_CS_fsm)
        ap_ST_st1_fsm_0 : 
        begin
            if (~(ap_start == ap_const_logic_0)) begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end else begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end
        end
        ap_ST_st2_fsm_1 : 
        begin
            if (~(exitcond1_fu_167_p2 == ap_const_lv1_0)) begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end else begin
                ap_NS_fsm = ap_ST_st3_fsm_2;
            end
        end
        ap_ST_st3_fsm_2 : 
        begin
            if ((ap_const_lv1_0 == exitcond_fu_199_p2)) begin
                ap_NS_fsm = ap_ST_st4_fsm_3;
            end else begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end
        end
        ap_ST_st4_fsm_3 : 
        begin
            ap_NS_fsm = ap_ST_st5_fsm_4;
        end
        ap_ST_st5_fsm_4 : 
        begin
            if ((~(ap_const_lv1_0 == tmp_61_reg_514) | (ap_const_lv1_0 == tmp_62_fu_230_p2))) begin
                ap_NS_fsm = ap_ST_st3_fsm_2;
            end else begin
                ap_NS_fsm = ap_ST_st6_fsm_5;
            end
        end
        ap_ST_st6_fsm_5 : 
        begin
            if ((ap_const_lv1_0 == tmp_64_fu_260_p2)) begin
                ap_NS_fsm = ap_ST_st5_fsm_4;
            end else begin
                ap_NS_fsm = ap_ST_st7_fsm_6;
            end
        end
        ap_ST_st7_fsm_6 : 
        begin
            ap_NS_fsm = ap_ST_st6_fsm_5;
        end
        default : 
        begin
            ap_NS_fsm = 'bx;
        end
    endcase
end


assign a_1_fu_205_p2 = (a_reg_87 + ap_const_lv9_1);

assign a_cast2_fu_195_p1 = a_reg_87;

assign a_cast3_fu_191_p1 = a_reg_87;

assign ap_return = found_fu_46;


always @ (ap_CS_fsm) begin
    ap_sig_bdd_112 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_6]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_130 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_4]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_25 = (ap_CS_fsm[ap_const_lv32_0] == ap_const_lv1_1);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_50 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_1]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_67 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_2]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_83 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_3]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_94 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_5]);
end

assign b_1_fu_173_p2 = (b_reg_76 + ap_const_lv9_1);

assign b_cast5_fu_163_p1 = b_reg_76;

assign exitcond1_fu_167_p2 = (b_reg_76 == ap_const_lv9_100? 1'b1: 1'b0);

assign exitcond_fu_199_p2 = (a_reg_87 == ap_const_lv9_100? 1'b1: 1'b0);

assign found_1_fu_241_p2 = (found_fu_46 + ap_const_lv32_1);

assign found_1_s_fu_247_p3 = ((tmp_63_fu_236_p2[0:0] === 1'b1) ? found_fu_46 : found_1_fu_241_p2);

assign icmp4_fu_330_p2 = ($signed(tmp_123_fu_320_p4) < $signed(24'b1)? 1'b1: 1'b0);

assign icmp_fu_295_p2 = ($signed(tmp_121_fu_285_p4) < $signed(24'b1)? 1'b1: 1'b0);

assign lx_1_fu_454_p2 = (ap_const_lv32_1 + lx_2_fu_447_p3);

assign lx_2_fu_447_p3 = ((sel_tmp2_reg_529[0:0] === 1'b1) ? p_lx_fu_425_p3 : lx_reg_143);

assign ly_2_fu_381_p2 = (ly_1_reg_132 + ap_const_lv32_1);

assign ly_3_fu_440_p3 = ((sel_tmp2_reg_529[0:0] === 1'b1) ? p_ly_1_fu_417_p3 : ly_1_reg_132);

assign max_2_cast_fu_391_p1 = img_accu_q0;

assign max_2_fu_387_p1 = img_accu_q0;

assign max_2_max_1_cast_fu_413_p1 = max_2_max_1_fu_405_p3;

assign max_2_max_1_fu_405_p3 = ((tmp_70_fu_395_p2[0:0] === 1'b1) ? max_2_cast_fu_391_p1 : tmp_125_fu_401_p1);

assign max_3_fu_433_p3 = ((sel_tmp2_reg_529[0:0] === 1'b1) ? max_2_max_1_cast_fu_413_p1 : max_1_reg_120);

assign max_fu_221_p1 = img_accu_q0;

assign p_lx_fu_425_p3 = ((tmp_70_fu_395_p2[0:0] === 1'b1) ? ap_const_lv32_5 : lx_reg_143);

assign p_ly_1_fu_417_p3 = ((tmp_70_fu_395_p2[0:0] === 1'b1) ? ap_const_lv32_5 : ly_1_reg_132);

assign rev2_fu_314_p2 = (tmp_122_fu_306_p3 ^ ap_const_lv1_1);

assign rev_fu_279_p2 = (tmp_120_fu_271_p3 ^ ap_const_lv1_1);

assign sel_tmp2_fu_375_p2 = (tmp12_fu_369_p2 & tmp_fu_363_p2);

assign tmp12_fu_369_p2 = (icmp4_fu_330_p2 & rev2_fu_314_p2);

assign tmp_119_fu_179_p1 = b_reg_76[7:0];

assign tmp_120_fu_271_p3 = tmp_65_fu_266_p2[ap_const_lv32_1F];

assign tmp_121_fu_285_p4 = {{tmp_65_fu_266_p2[ap_const_lv32_1F : ap_const_lv32_8]}};

assign tmp_122_fu_306_p3 = tmp_66_fu_301_p2[ap_const_lv32_1F];

assign tmp_123_fu_320_p4 = {{tmp_66_fu_301_p2[ap_const_lv32_1F : ap_const_lv32_8]}};

assign tmp_124_fu_336_p1 = tmp_65_fu_266_p2[7:0];

assign tmp_125_fu_401_p1 = max_1_reg_120[30:0];

assign tmp_185_cast_fu_348_p1 = tmp_67_fu_340_p3;

assign tmp_59_fu_211_p2 = (tmp_s_reg_485 + a_cast2_fu_195_p1);

assign tmp_60_fu_216_p1 = tmp_59_fu_211_p2;

assign tmp_61_fu_225_p2 = ($signed(max_fu_221_p1) < $signed(threshold)? 1'b1: 1'b0);

assign tmp_62_fu_230_p2 = ($signed(ly_reg_108) < $signed(32'b101)? 1'b1: 1'b0);

assign tmp_63_fu_236_p2 = ($signed(max1_reg_98) > $signed(max_reg_508)? 1'b1: 1'b0);

assign tmp_64_fu_260_p2 = ($signed(lx_reg_143) < $signed(32'b101)? 1'b1: 1'b0);

assign tmp_65_fu_266_p2 = (b_cast5_reg_472 + ly_1_reg_132);

assign tmp_66_fu_301_p2 = (a_cast3_reg_490 + lx_reg_143);

assign tmp_67_fu_340_p3 = {{tmp_124_fu_336_p1}, {ap_const_lv8_0}};

assign tmp_68_fu_352_p2 = (tmp_185_cast_fu_348_p1 + tmp_66_fu_301_p2);

assign tmp_69_fu_358_p1 = tmp_68_fu_352_p2;

assign tmp_70_fu_395_p2 = ($signed(max_2_fu_387_p1) > $signed(max_1_reg_120)? 1'b1: 1'b0);

assign tmp_fu_363_p2 = (icmp_fu_295_p2 & rev_fu_279_p2);

assign tmp_s_fu_183_p3 = {{tmp_119_fu_179_p1}, {ap_const_lv8_0}};
always @ (posedge ap_clk) begin
    b_cast5_reg_472[31:9] <= 23'b00000000000000000000000;
    tmp_s_reg_485[7:0] <= 8'b00000000;
    a_cast3_reg_490[31:9] <= 23'b00000000000000000000000;
    max_reg_508[31:16] <= 16'b0000000000000000;
end



endmodule //EdgeDetect_Top_GetCircles

