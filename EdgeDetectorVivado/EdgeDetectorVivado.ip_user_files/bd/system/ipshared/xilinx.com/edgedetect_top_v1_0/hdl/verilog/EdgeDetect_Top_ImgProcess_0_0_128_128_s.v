// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2015.4
// Copyright (C) 2015 Xilinx Inc. All rights reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module EdgeDetect_Top_ImgProcess_0_0_128_128_s (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        p_src_data_stream_V_dout,
        p_src_data_stream_V_empty_n,
        p_src_data_stream_V_read,
        p_dst_data_stream_V_din,
        p_dst_data_stream_V_full_n,
        p_dst_data_stream_V_write,
        threashold_dout,
        threashold_empty_n,
        threashold_read,
        width,
        height
);

parameter    ap_const_logic_1 = 1'b1;
parameter    ap_const_logic_0 = 1'b0;
parameter    ap_ST_st1_fsm_0 = 14'b1;
parameter    ap_ST_st2_fsm_1 = 14'b10;
parameter    ap_ST_st3_fsm_2 = 14'b100;
parameter    ap_ST_st4_fsm_3 = 14'b1000;
parameter    ap_ST_st5_fsm_4 = 14'b10000;
parameter    ap_ST_st6_fsm_5 = 14'b100000;
parameter    ap_ST_st7_fsm_6 = 14'b1000000;
parameter    ap_ST_st8_fsm_7 = 14'b10000000;
parameter    ap_ST_st9_fsm_8 = 14'b100000000;
parameter    ap_ST_st10_fsm_9 = 14'b1000000000;
parameter    ap_ST_st11_fsm_10 = 14'b10000000000;
parameter    ap_ST_st12_fsm_11 = 14'b100000000000;
parameter    ap_ST_st13_fsm_12 = 14'b1000000000000;
parameter    ap_ST_st14_fsm_13 = 14'b10000000000000;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    ap_const_lv1_1 = 1'b1;
parameter    ap_const_lv32_1 = 32'b1;
parameter    ap_const_lv1_0 = 1'b0;
parameter    ap_const_lv32_2 = 32'b10;
parameter    ap_const_lv32_4 = 32'b100;
parameter    ap_const_lv32_5 = 32'b101;
parameter    ap_const_lv32_A = 32'b1010;
parameter    ap_const_lv32_B = 32'b1011;
parameter    ap_const_lv32_C = 32'b1100;
parameter    ap_const_lv9_0 = 9'b000000000;
parameter    ap_const_lv32_D = 32'b1101;
parameter    ap_const_lv2_0 = 2'b00;
parameter    ap_const_lv32_9 = 32'b1001;
parameter    ap_const_lv64_0 = 64'b0000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_const_lv64_1 = 64'b1;
parameter    ap_const_lv64_2 = 64'b10;
parameter    ap_const_lv64_3 = 64'b11;
parameter    ap_const_lv64_4 = 64'b100;
parameter    ap_const_lv64_5 = 64'b101;
parameter    ap_const_lv64_6 = 64'b110;
parameter    ap_const_lv64_7 = 64'b111;
parameter    ap_const_lv64_8 = 64'b1000;
parameter    ap_const_lv32_3 = 32'b11;
parameter    ap_const_lv32_6 = 32'b110;
parameter    ap_const_lv32_7 = 32'b111;
parameter    ap_const_lv32_8 = 32'b1000;
parameter    ap_const_lv9_1 = 9'b1;
parameter    ap_const_lv8_0 = 8'b00000000;
parameter    ap_const_lv2_3 = 2'b11;
parameter    ap_const_lv2_1 = 2'b1;
parameter    ap_const_lv8_FF = 8'b11111111;
parameter    ap_true = 1'b1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [7:0] p_src_data_stream_V_dout;
input   p_src_data_stream_V_empty_n;
output   p_src_data_stream_V_read;
output  [7:0] p_dst_data_stream_V_din;
input   p_dst_data_stream_V_full_n;
output   p_dst_data_stream_V_write;
input  [31:0] threashold_dout;
input   threashold_empty_n;
output   threashold_read;
input  [7:0] width;
input  [7:0] height;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg p_src_data_stream_V_read;
reg p_dst_data_stream_V_write;
reg threashold_read;
reg    ap_done_reg = 1'b0;
(* fsm_encoding = "none" *) reg   [13:0] ap_CS_fsm = 14'b1;
reg    ap_sig_cseq_ST_st1_fsm_0;
reg    ap_sig_bdd_33;
wire   [3:0] Gx_address0;
reg    Gx_ce0;
wire   [2:0] Gx_q0;
wire   [3:0] Gy_address0;
reg    Gy_ce0;
wire   [2:0] Gy_q0;
wire   [3:0] data_val_assign_addr_gep_fu_179_p3;
reg   [3:0] data_val_assign_addr_reg_881;
reg    ap_sig_bdd_75;
wire   [3:0] data_val_assign_addr_1_gep_fu_187_p3;
reg   [3:0] data_val_assign_addr_1_reg_886;
wire   [3:0] data_val_assign_addr_2_gep_fu_195_p3;
reg   [3:0] data_val_assign_addr_2_reg_891;
wire   [3:0] data_val_assign_addr_3_gep_fu_203_p3;
reg   [3:0] data_val_assign_addr_3_reg_896;
wire   [3:0] data_val_assign_addr_4_gep_fu_211_p3;
reg   [3:0] data_val_assign_addr_4_reg_901;
wire   [3:0] data_val_assign_addr_5_gep_fu_219_p3;
reg   [3:0] data_val_assign_addr_5_reg_906;
wire   [3:0] data_val_assign_addr_6_gep_fu_227_p3;
reg   [3:0] data_val_assign_addr_6_reg_911;
wire   [3:0] data_val_assign_addr_7_gep_fu_235_p3;
reg   [3:0] data_val_assign_addr_7_reg_916;
wire   [3:0] data_val_assign_addr_8_gep_fu_243_p3;
reg   [3:0] data_val_assign_addr_8_reg_921;
reg   [31:0] threashold_read_reg_926;
wire   [8:0] tmp_3_fu_453_p1;
wire   [8:0] tmp_4_fu_457_p2;
wire   [8:0] tmp_6_fu_463_p1;
wire   [8:0] tmp_7_fu_467_p2;
wire   [8:0] q_V_fu_478_p2;
reg   [8:0] q_V_reg_954;
reg    ap_sig_cseq_ST_st2_fsm_1;
reg    ap_sig_bdd_111;
wire   [0:0] tmp_8_i_i_fu_484_p2;
reg   [0:0] tmp_8_i_i_reg_959;
wire   [0:0] exitcond1_fu_473_p2;
wire   [0:0] tmp_10_i_i_fu_505_p2;
reg   [0:0] tmp_10_i_i_reg_964;
wire   [0:0] tmp_fu_511_p2;
reg   [0:0] tmp_reg_969;
wire   [8:0] p_V_fu_522_p2;
reg   [8:0] p_V_reg_977;
reg    ap_sig_cseq_ST_st3_fsm_2;
reg    ap_sig_bdd_130;
wire   [0:0] tmp_14_i_i_fu_528_p2;
reg   [0:0] tmp_14_i_i_reg_982;
wire   [0:0] exitcond_fu_517_p2;
wire   [63:0] tmp_15_i_i_fu_533_p1;
reg   [63:0] tmp_15_i_i_reg_991;
reg   [6:0] lb_val_1_addr_reg_1001;
reg    ap_sig_cseq_ST_st5_fsm_4;
reg    ap_sig_bdd_154;
reg   [7:0] sw_val_1_1_load_reg_1014;
reg    ap_sig_cseq_ST_st6_fsm_5;
reg    ap_sig_bdd_166;
reg   [7:0] sw_val_2_1_load_reg_1019;
wire   [7:0] sw_val_2_0_1_fu_569_p3;
reg   [7:0] sw_val_2_0_1_reg_1024;
wire   [7:0] sw_val_1_0_1_fu_576_p3;
reg   [7:0] sw_val_1_0_1_reg_1030;
wire   [7:0] sw_val_0_0_1_fu_583_p3;
reg   [7:0] sw_val_0_0_1_reg_1036;
wire   [0:0] or_cond2_i_i_fu_612_p2;
reg   [0:0] or_cond2_i_i_reg_1041;
wire   [1:0] rowOffset_fu_635_p2;
reg   [1:0] rowOffset_reg_1048;
reg    ap_sig_cseq_ST_st11_fsm_10;
reg    ap_sig_bdd_185;
wire   [4:0] tmp_s_fu_657_p2;
reg   [4:0] tmp_s_reg_1053;
wire   [0:0] exitcond1_i_i_i_fu_629_p2;
wire   [0:0] tmp_i_i_i_fu_709_p2;
wire   [0:0] or_cond3_i_i_fu_720_p2;
reg   [0:0] or_cond3_i_i_reg_1063;
wire   [1:0] colOffset_fu_731_p2;
reg   [1:0] colOffset_reg_1070;
reg    ap_sig_cseq_ST_st12_fsm_11;
reg    ap_sig_bdd_212;
wire   [0:0] exitcond_i_i_i_fu_725_p2;
wire   [31:0] x_dir_fu_771_p2;
reg    ap_sig_cseq_ST_st13_fsm_12;
reg    ap_sig_bdd_230;
wire   [31:0] y_dir_fu_791_p2;
reg   [6:0] lb_val_0_address0;
reg    lb_val_0_ce0;
reg    lb_val_0_we0;
wire   [7:0] lb_val_0_d0;
wire   [7:0] lb_val_0_q0;
reg   [6:0] lb_val_1_address0;
reg    lb_val_1_ce0;
reg    lb_val_1_we0;
wire   [7:0] lb_val_1_d0;
wire   [7:0] lb_val_1_q0;
reg   [6:0] lb_val_2_address0;
reg    lb_val_2_ce0;
reg    lb_val_2_we0;
wire   [7:0] lb_val_2_d0;
wire   [7:0] lb_val_2_q0;
reg   [3:0] data_val_assign_address0;
reg    data_val_assign_ce0;
reg    data_val_assign_we0;
reg   [7:0] data_val_assign_d0;
reg   [3:0] data_val_assign_address1;
reg    data_val_assign_ce1;
reg    data_val_assign_we1;
reg   [7:0] data_val_assign_d1;
wire   [7:0] data_val_assign_q1;
reg   [8:0] p_i_i_reg_339;
reg   [8:0] p_3_i_i_reg_350;
reg    ap_sig_cseq_ST_st14_fsm_13;
reg    ap_sig_bdd_288;
reg    ap_sig_bdd_293;
reg   [1:0] row_assign_reg_362;
reg    ap_sig_cseq_ST_st10_fsm_9;
reg    ap_sig_bdd_306;
reg   [31:0] y_dir_i_i_i_reg_373;
reg   [31:0] x_dir_i_i_i_reg_385;
reg   [31:0] y_dir_1_i_i_i_reg_397;
reg   [31:0] x_dir_1_i_i_i_reg_409;
reg   [1:0] col_assign_reg_421;
reg   [0:0] tmp_8_reg_432;
reg    ap_sig_cseq_ST_st4_fsm_3;
reg    ap_sig_bdd_337;
wire   [63:0] tmp_18_i_i_fu_548_p1;
wire   [0:0] brmerge_demorgan_i_i_fu_544_p2;
wire   [63:0] tmp_28_i_i_fu_558_p1;
wire  signed [63:0] tmp_11_cast_fu_746_p1;
reg    ap_sig_bdd_352;
reg   [7:0] sw_val_1_0_fu_100;
reg   [7:0] sw_val_0_0_fu_104;
reg   [7:0] sw_val_0_1_fu_108;
reg   [7:0] sw_val_0_1_1_fu_112;
reg    ap_sig_cseq_ST_st7_fsm_6;
reg    ap_sig_bdd_381;
reg   [7:0] sw_val_1_1_fu_116;
reg   [7:0] sw_val_1_1_1_fu_120;
reg    ap_sig_cseq_ST_st8_fsm_7;
reg    ap_sig_bdd_394;
reg   [7:0] sw_val_2_1_fu_124;
reg   [7:0] sw_val_2_1_1_fu_128;
reg    ap_sig_cseq_ST_st9_fsm_8;
reg    ap_sig_bdd_417;
wire   [7:0] tmp_5_fu_489_p4;
wire   [0:0] icmp_fu_499_p2;
wire   [7:0] tmp_13_fu_591_p4;
wire   [0:0] icmp1_fu_601_p2;
wire   [0:0] tmp1_fu_607_p2;
wire   [3:0] tmp_9_fu_645_p3;
wire   [4:0] p_shl_cast_fu_653_p1;
wire   [4:0] tmp_i_i_i_cast_fu_641_p1;
wire   [0:0] abscond_i_i_i_fu_669_p2;
wire   [31:0] neg_i_i_i_fu_663_p2;
wire   [0:0] abscond1_i_i_i_fu_689_p2;
wire   [31:0] neg1_i_i_i_fu_683_p2;
wire   [31:0] abs_i_i_i_fu_675_p3;
wire   [31:0] abs1_i_i_i_fu_695_p3;
wire   [31:0] val_fu_703_p2;
wire   [0:0] tmp_30_i_i_fu_714_p2;
wire   [4:0] tmp_3_i_i_i_cast_fu_737_p1;
wire   [4:0] tmp_1_fu_741_p2;
wire   [7:0] tmp_5_i_i_i_fu_761_p0;
wire   [11:0] tmp_4_i_i_i_cast_fu_753_p1;
wire  signed [2:0] tmp_5_i_i_i_fu_761_p1;
wire   [11:0] tmp_5_i_i_i_fu_761_p2;
wire  signed [31:0] tmp_5_i_i_i_cast_fu_767_p1;
wire   [7:0] tmp_6_i_i_i_fu_781_p0;
wire  signed [2:0] tmp_6_i_i_i_fu_781_p1;
wire   [11:0] tmp_6_i_i_i_fu_781_p2;
wire  signed [31:0] tmp_6_i_i_i_cast_fu_787_p1;
reg   [13:0] ap_NS_fsm;


EdgeDetect_Top_ImgProcess_0_0_128_128_s_Gx #(
    .DataWidth( 3 ),
    .AddressRange( 9 ),
    .AddressWidth( 4 ))
Gx_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .address0( Gx_address0 ),
    .ce0( Gx_ce0 ),
    .q0( Gx_q0 )
);

EdgeDetect_Top_ImgProcess_0_0_128_128_s_Gy #(
    .DataWidth( 3 ),
    .AddressRange( 9 ),
    .AddressWidth( 4 ))
Gy_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .address0( Gy_address0 ),
    .ce0( Gy_ce0 ),
    .q0( Gy_q0 )
);

EdgeDetect_Top_ImgProcess_0_0_128_128_s_lb_val_0 #(
    .DataWidth( 8 ),
    .AddressRange( 128 ),
    .AddressWidth( 7 ))
lb_val_0_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .address0( lb_val_0_address0 ),
    .ce0( lb_val_0_ce0 ),
    .we0( lb_val_0_we0 ),
    .d0( lb_val_0_d0 ),
    .q0( lb_val_0_q0 )
);

EdgeDetect_Top_ImgProcess_0_0_128_128_s_lb_val_0 #(
    .DataWidth( 8 ),
    .AddressRange( 128 ),
    .AddressWidth( 7 ))
lb_val_1_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .address0( lb_val_1_address0 ),
    .ce0( lb_val_1_ce0 ),
    .we0( lb_val_1_we0 ),
    .d0( lb_val_1_d0 ),
    .q0( lb_val_1_q0 )
);

EdgeDetect_Top_ImgProcess_0_0_128_128_s_lb_val_0 #(
    .DataWidth( 8 ),
    .AddressRange( 128 ),
    .AddressWidth( 7 ))
lb_val_2_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .address0( lb_val_2_address0 ),
    .ce0( lb_val_2_ce0 ),
    .we0( lb_val_2_we0 ),
    .d0( lb_val_2_d0 ),
    .q0( lb_val_2_q0 )
);

EdgeDetect_Top_ImgProcess_0_0_128_128_s_data_val_assign #(
    .DataWidth( 8 ),
    .AddressRange( 9 ),
    .AddressWidth( 4 ))
data_val_assign_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .address0( data_val_assign_address0 ),
    .ce0( data_val_assign_ce0 ),
    .we0( data_val_assign_we0 ),
    .d0( data_val_assign_d0 ),
    .address1( data_val_assign_address1 ),
    .ce1( data_val_assign_ce1 ),
    .we1( data_val_assign_we1 ),
    .d1( data_val_assign_d1 ),
    .q1( data_val_assign_q1 )
);



always @ (posedge ap_clk) begin : ap_ret_ap_CS_fsm
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_st1_fsm_0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin : ap_ret_ap_done_reg
    if (ap_rst == 1'b1) begin
        ap_done_reg <= ap_const_logic_0;
    end else begin
        if ((ap_const_logic_1 == ap_continue)) begin
            ap_done_reg <= ap_const_logic_0;
        end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & ~(exitcond1_fu_473_p2 == ap_const_lv1_0))) begin
            ap_done_reg <= ap_const_logic_1;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st13_fsm_12)) begin
        col_assign_reg_421 <= colOffset_reg_1070;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st11_fsm_10) & ~(ap_const_lv1_0 == or_cond2_i_i_reg_1041) & (ap_const_lv1_0 == exitcond1_i_i_i_fu_629_p2))) begin
        col_assign_reg_421 <= ap_const_lv2_0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st14_fsm_13) & ~ap_sig_bdd_293)) begin
        p_3_i_i_reg_350 <= p_V_reg_977;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond1_fu_473_p2 == ap_const_lv1_0))) begin
        p_3_i_i_reg_350 <= ap_const_lv9_0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2) & ~(ap_const_lv1_0 == exitcond_fu_517_p2))) begin
        p_i_i_reg_339 <= q_V_reg_954;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~ap_sig_bdd_75)) begin
        p_i_i_reg_339 <= ap_const_lv9_0;
    end
end

always @ (posedge ap_clk) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st10_fsm_9)) begin
        row_assign_reg_362 <= ap_const_lv2_0;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st12_fsm_11) & ~(ap_const_lv1_0 == exitcond_i_i_i_fu_725_p2))) begin
        row_assign_reg_362 <= rowOffset_reg_1048;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st6_fsm_5) & (ap_const_lv1_0 == or_cond2_i_i_fu_612_p2))) begin
        tmp_8_reg_432 <= ap_const_lv1_0;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st11_fsm_10) & ~(ap_const_lv1_0 == or_cond2_i_i_reg_1041) & ~(ap_const_lv1_0 == exitcond1_i_i_i_fu_629_p2))) begin
        tmp_8_reg_432 <= tmp_i_i_i_fu_709_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st13_fsm_12)) begin
        x_dir_1_i_i_i_reg_409 <= x_dir_fu_771_p2;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st11_fsm_10) & ~(ap_const_lv1_0 == or_cond2_i_i_reg_1041) & (ap_const_lv1_0 == exitcond1_i_i_i_fu_629_p2))) begin
        x_dir_1_i_i_i_reg_409 <= x_dir_i_i_i_reg_385;
    end
end

always @ (posedge ap_clk) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st10_fsm_9)) begin
        x_dir_i_i_i_reg_385 <= ap_const_lv32_0;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st12_fsm_11) & ~(ap_const_lv1_0 == exitcond_i_i_i_fu_725_p2))) begin
        x_dir_i_i_i_reg_385 <= x_dir_1_i_i_i_reg_409;
    end
end

always @ (posedge ap_clk) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st13_fsm_12)) begin
        y_dir_1_i_i_i_reg_397 <= y_dir_fu_791_p2;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st11_fsm_10) & ~(ap_const_lv1_0 == or_cond2_i_i_reg_1041) & (ap_const_lv1_0 == exitcond1_i_i_i_fu_629_p2))) begin
        y_dir_1_i_i_i_reg_397 <= y_dir_i_i_i_reg_373;
    end
end

always @ (posedge ap_clk) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st10_fsm_9)) begin
        y_dir_i_i_i_reg_373 <= ap_const_lv32_0;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st12_fsm_11) & ~(ap_const_lv1_0 == exitcond_i_i_i_fu_725_p2))) begin
        y_dir_i_i_i_reg_373 <= y_dir_1_i_i_i_reg_397;
    end
end

always @ (posedge ap_clk) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st12_fsm_11)) begin
        colOffset_reg_1070 <= colOffset_fu_731_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2) & (ap_const_lv1_0 == exitcond_fu_517_p2) & ~(ap_const_lv1_0 == tmp_14_i_i_fu_528_p2))) begin
        lb_val_1_addr_reg_1001 <= tmp_15_i_i_fu_533_p1;
        tmp_15_i_i_reg_991[8 : 0] <= tmp_15_i_i_fu_533_p1[8 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st6_fsm_5)) begin
        or_cond2_i_i_reg_1041 <= or_cond2_i_i_fu_612_p2;
        sw_val_0_0_1_reg_1036 <= sw_val_0_0_1_fu_583_p3;
        sw_val_1_0_1_reg_1030 <= sw_val_1_0_1_fu_576_p3;
        sw_val_1_1_load_reg_1014 <= sw_val_1_1_fu_116;
        sw_val_2_0_1_reg_1024 <= sw_val_2_0_1_fu_569_p3;
        sw_val_2_1_load_reg_1019 <= sw_val_2_1_fu_124;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st11_fsm_10) & ((ap_const_lv1_0 == or_cond2_i_i_reg_1041) | ~(ap_const_lv1_0 == exitcond1_i_i_i_fu_629_p2)))) begin
        or_cond3_i_i_reg_1063 <= or_cond3_i_i_fu_720_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2)) begin
        p_V_reg_977 <= p_V_fu_522_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1)) begin
        q_V_reg_954 <= q_V_fu_478_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st11_fsm_10) & ~(ap_const_lv1_0 == or_cond2_i_i_reg_1041))) begin
        rowOffset_reg_1048 <= rowOffset_fu_635_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3) & ~(ap_const_lv1_0 == brmerge_demorgan_i_i_fu_544_p2) & ~ap_sig_bdd_352)) begin
        sw_val_0_0_fu_104 <= p_src_data_stream_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st14_fsm_13) & ~ap_sig_bdd_293)) begin
        sw_val_0_1_1_fu_112 <= sw_val_0_1_fu_108;
        sw_val_0_1_fu_108 <= sw_val_0_0_1_reg_1036;
        sw_val_1_1_1_fu_120 <= sw_val_1_1_fu_116;
        sw_val_1_1_fu_116 <= sw_val_1_0_1_reg_1030;
        sw_val_2_1_1_fu_128 <= sw_val_2_1_fu_124;
        sw_val_2_1_fu_124 <= sw_val_2_0_1_reg_1024;
    end
end

always @ (posedge ap_clk) begin
    if ((~(ap_const_lv1_0 == tmp_14_i_i_reg_982) & (ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3) & ~ap_sig_bdd_352)) begin
        sw_val_1_0_fu_100 <= lb_val_0_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~ap_sig_bdd_75)) begin
        threashold_read_reg_926 <= threashold_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond1_fu_473_p2 == ap_const_lv1_0))) begin
        tmp_10_i_i_reg_964 <= tmp_10_i_i_fu_505_p2;
        tmp_8_i_i_reg_959 <= tmp_8_i_i_fu_484_p2;
        tmp_reg_969 <= tmp_fu_511_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2) & (ap_const_lv1_0 == exitcond_fu_517_p2))) begin
        tmp_14_i_i_reg_982 <= tmp_14_i_i_fu_528_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st11_fsm_10) & ~(ap_const_lv1_0 == or_cond2_i_i_reg_1041) & (ap_const_lv1_0 == exitcond1_i_i_i_fu_629_p2))) begin
        tmp_s_reg_1053 <= tmp_s_fu_657_p2;
    end
end

always @ (ap_sig_cseq_ST_st12_fsm_11) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st12_fsm_11)) begin
        Gx_ce0 = ap_const_logic_1;
    end else begin
        Gx_ce0 = ap_const_logic_0;
    end
end

always @ (ap_sig_cseq_ST_st12_fsm_11) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st12_fsm_11)) begin
        Gy_ce0 = ap_const_logic_1;
    end else begin
        Gy_ce0 = ap_const_logic_0;
    end
end

always @ (ap_done_reg or ap_sig_cseq_ST_st2_fsm_1 or exitcond1_fu_473_p2) begin
    if (((ap_const_logic_1 == ap_done_reg) | ((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & ~(exitcond1_fu_473_p2 == ap_const_lv1_0)))) begin
        ap_done = ap_const_logic_1;
    end else begin
        ap_done = ap_const_logic_0;
    end
end

always @ (ap_start or ap_sig_cseq_ST_st1_fsm_0) begin
    if ((~(ap_const_logic_1 == ap_start) & (ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0))) begin
        ap_idle = ap_const_logic_1;
    end else begin
        ap_idle = ap_const_logic_0;
    end
end

always @ (ap_sig_cseq_ST_st2_fsm_1 or exitcond1_fu_473_p2) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & ~(exitcond1_fu_473_p2 == ap_const_lv1_0))) begin
        ap_ready = ap_const_logic_1;
    end else begin
        ap_ready = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_306) begin
    if (ap_sig_bdd_306) begin
        ap_sig_cseq_ST_st10_fsm_9 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st10_fsm_9 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_185) begin
    if (ap_sig_bdd_185) begin
        ap_sig_cseq_ST_st11_fsm_10 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st11_fsm_10 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_212) begin
    if (ap_sig_bdd_212) begin
        ap_sig_cseq_ST_st12_fsm_11 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st12_fsm_11 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_230) begin
    if (ap_sig_bdd_230) begin
        ap_sig_cseq_ST_st13_fsm_12 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st13_fsm_12 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_288) begin
    if (ap_sig_bdd_288) begin
        ap_sig_cseq_ST_st14_fsm_13 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st14_fsm_13 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_33) begin
    if (ap_sig_bdd_33) begin
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_111) begin
    if (ap_sig_bdd_111) begin
        ap_sig_cseq_ST_st2_fsm_1 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st2_fsm_1 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_130) begin
    if (ap_sig_bdd_130) begin
        ap_sig_cseq_ST_st3_fsm_2 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st3_fsm_2 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_337) begin
    if (ap_sig_bdd_337) begin
        ap_sig_cseq_ST_st4_fsm_3 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st4_fsm_3 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_154) begin
    if (ap_sig_bdd_154) begin
        ap_sig_cseq_ST_st5_fsm_4 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st5_fsm_4 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_166) begin
    if (ap_sig_bdd_166) begin
        ap_sig_cseq_ST_st6_fsm_5 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st6_fsm_5 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_381) begin
    if (ap_sig_bdd_381) begin
        ap_sig_cseq_ST_st7_fsm_6 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st7_fsm_6 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_394) begin
    if (ap_sig_bdd_394) begin
        ap_sig_cseq_ST_st8_fsm_7 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st8_fsm_7 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_417) begin
    if (ap_sig_bdd_417) begin
        ap_sig_cseq_ST_st9_fsm_8 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st9_fsm_8 = ap_const_logic_0;
    end
end

always @ (data_val_assign_addr_reg_881 or data_val_assign_addr_2_reg_891 or data_val_assign_addr_4_reg_901 or data_val_assign_addr_6_reg_911 or data_val_assign_addr_8_reg_921 or ap_sig_cseq_ST_st6_fsm_5 or ap_sig_cseq_ST_st10_fsm_9 or ap_sig_cseq_ST_st7_fsm_6 or ap_sig_cseq_ST_st8_fsm_7 or ap_sig_cseq_ST_st9_fsm_8) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st10_fsm_9)) begin
        data_val_assign_address0 = data_val_assign_addr_8_reg_921;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st9_fsm_8)) begin
        data_val_assign_address0 = data_val_assign_addr_6_reg_911;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st8_fsm_7)) begin
        data_val_assign_address0 = data_val_assign_addr_4_reg_901;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st7_fsm_6)) begin
        data_val_assign_address0 = data_val_assign_addr_2_reg_891;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st6_fsm_5)) begin
        data_val_assign_address0 = data_val_assign_addr_reg_881;
    end else begin
        data_val_assign_address0 = 'bx;
    end
end

always @ (data_val_assign_addr_1_reg_886 or data_val_assign_addr_3_reg_896 or data_val_assign_addr_5_reg_906 or data_val_assign_addr_7_reg_916 or ap_sig_cseq_ST_st6_fsm_5 or ap_sig_cseq_ST_st12_fsm_11 or tmp_11_cast_fu_746_p1 or ap_sig_cseq_ST_st7_fsm_6 or ap_sig_cseq_ST_st8_fsm_7 or ap_sig_cseq_ST_st9_fsm_8) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st9_fsm_8)) begin
        data_val_assign_address1 = data_val_assign_addr_7_reg_916;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st8_fsm_7)) begin
        data_val_assign_address1 = data_val_assign_addr_5_reg_906;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st7_fsm_6)) begin
        data_val_assign_address1 = data_val_assign_addr_3_reg_896;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st6_fsm_5)) begin
        data_val_assign_address1 = data_val_assign_addr_1_reg_886;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st12_fsm_11)) begin
        data_val_assign_address1 = tmp_11_cast_fu_746_p1;
    end else begin
        data_val_assign_address1 = 'bx;
    end
end

always @ (ap_sig_cseq_ST_st6_fsm_5 or ap_sig_cseq_ST_st10_fsm_9 or ap_sig_cseq_ST_st7_fsm_6 or ap_sig_cseq_ST_st8_fsm_7 or ap_sig_cseq_ST_st9_fsm_8) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st6_fsm_5) | (ap_const_logic_1 == ap_sig_cseq_ST_st10_fsm_9) | (ap_const_logic_1 == ap_sig_cseq_ST_st7_fsm_6) | (ap_const_logic_1 == ap_sig_cseq_ST_st8_fsm_7) | (ap_const_logic_1 == ap_sig_cseq_ST_st9_fsm_8))) begin
        data_val_assign_ce0 = ap_const_logic_1;
    end else begin
        data_val_assign_ce0 = ap_const_logic_0;
    end
end

always @ (ap_sig_cseq_ST_st6_fsm_5 or ap_sig_cseq_ST_st12_fsm_11 or ap_sig_cseq_ST_st7_fsm_6 or ap_sig_cseq_ST_st8_fsm_7 or ap_sig_cseq_ST_st9_fsm_8) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st6_fsm_5) | (ap_const_logic_1 == ap_sig_cseq_ST_st12_fsm_11) | (ap_const_logic_1 == ap_sig_cseq_ST_st7_fsm_6) | (ap_const_logic_1 == ap_sig_cseq_ST_st8_fsm_7) | (ap_const_logic_1 == ap_sig_cseq_ST_st9_fsm_8))) begin
        data_val_assign_ce1 = ap_const_logic_1;
    end else begin
        data_val_assign_ce1 = ap_const_logic_0;
    end
end

always @ (sw_val_1_1_load_reg_1014 or ap_sig_cseq_ST_st6_fsm_5 or sw_val_2_0_1_reg_1024 or sw_val_0_0_1_fu_583_p3 or ap_sig_cseq_ST_st10_fsm_9 or sw_val_0_1_1_fu_112 or ap_sig_cseq_ST_st7_fsm_6 or ap_sig_cseq_ST_st8_fsm_7 or sw_val_2_1_1_fu_128 or ap_sig_cseq_ST_st9_fsm_8) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st10_fsm_9)) begin
        data_val_assign_d0 = sw_val_2_1_1_fu_128;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st9_fsm_8)) begin
        data_val_assign_d0 = sw_val_2_0_1_reg_1024;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st8_fsm_7)) begin
        data_val_assign_d0 = sw_val_1_1_load_reg_1014;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st7_fsm_6)) begin
        data_val_assign_d0 = sw_val_0_1_1_fu_112;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st6_fsm_5)) begin
        data_val_assign_d0 = sw_val_0_0_1_fu_583_p3;
    end else begin
        data_val_assign_d0 = 'bx;
    end
end

always @ (ap_sig_cseq_ST_st6_fsm_5 or sw_val_2_1_load_reg_1019 or sw_val_1_0_1_reg_1030 or sw_val_0_1_fu_108 or ap_sig_cseq_ST_st7_fsm_6 or sw_val_1_1_1_fu_120 or ap_sig_cseq_ST_st8_fsm_7 or ap_sig_cseq_ST_st9_fsm_8) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st9_fsm_8)) begin
        data_val_assign_d1 = sw_val_2_1_load_reg_1019;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st8_fsm_7)) begin
        data_val_assign_d1 = sw_val_1_1_1_fu_120;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st7_fsm_6)) begin
        data_val_assign_d1 = sw_val_1_0_1_reg_1030;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st6_fsm_5)) begin
        data_val_assign_d1 = sw_val_0_1_fu_108;
    end else begin
        data_val_assign_d1 = 'bx;
    end
end

always @ (ap_sig_cseq_ST_st6_fsm_5 or or_cond2_i_i_fu_612_p2 or ap_sig_cseq_ST_st10_fsm_9 or ap_sig_cseq_ST_st7_fsm_6 or ap_sig_cseq_ST_st8_fsm_7 or ap_sig_cseq_ST_st9_fsm_8) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st10_fsm_9) | (ap_const_logic_1 == ap_sig_cseq_ST_st7_fsm_6) | (ap_const_logic_1 == ap_sig_cseq_ST_st8_fsm_7) | ((ap_const_logic_1 == ap_sig_cseq_ST_st6_fsm_5) & ~(ap_const_lv1_0 == or_cond2_i_i_fu_612_p2)) | (ap_const_logic_1 == ap_sig_cseq_ST_st9_fsm_8))) begin
        data_val_assign_we0 = ap_const_logic_1;
    end else begin
        data_val_assign_we0 = ap_const_logic_0;
    end
end

always @ (ap_sig_cseq_ST_st6_fsm_5 or or_cond2_i_i_fu_612_p2 or ap_sig_cseq_ST_st7_fsm_6 or ap_sig_cseq_ST_st8_fsm_7 or ap_sig_cseq_ST_st9_fsm_8) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st7_fsm_6) | (ap_const_logic_1 == ap_sig_cseq_ST_st8_fsm_7) | ((ap_const_logic_1 == ap_sig_cseq_ST_st6_fsm_5) & ~(ap_const_lv1_0 == or_cond2_i_i_fu_612_p2)) | (ap_const_logic_1 == ap_sig_cseq_ST_st9_fsm_8))) begin
        data_val_assign_we1 = ap_const_logic_1;
    end else begin
        data_val_assign_we1 = ap_const_logic_0;
    end
end

always @ (ap_sig_cseq_ST_st3_fsm_2 or tmp_15_i_i_fu_533_p1 or ap_sig_cseq_ST_st4_fsm_3 or tmp_18_i_i_fu_548_p1) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        lb_val_0_address0 = tmp_18_i_i_fu_548_p1;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2)) begin
        lb_val_0_address0 = tmp_15_i_i_fu_533_p1;
    end else begin
        lb_val_0_address0 = 'bx;
    end
end

always @ (ap_sig_cseq_ST_st3_fsm_2 or ap_sig_cseq_ST_st4_fsm_3 or ap_sig_bdd_352) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2) | ((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3) & ~ap_sig_bdd_352))) begin
        lb_val_0_ce0 = ap_const_logic_1;
    end else begin
        lb_val_0_ce0 = ap_const_logic_0;
    end
end

always @ (ap_sig_cseq_ST_st4_fsm_3 or brmerge_demorgan_i_i_fu_544_p2 or ap_sig_bdd_352) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3) & ~(ap_const_lv1_0 == brmerge_demorgan_i_i_fu_544_p2) & ~ap_sig_bdd_352)) begin
        lb_val_0_we0 = ap_const_logic_1;
    end else begin
        lb_val_0_we0 = ap_const_logic_0;
    end
end

always @ (ap_sig_cseq_ST_st3_fsm_2 or tmp_15_i_i_fu_533_p1 or lb_val_1_addr_reg_1001 or ap_sig_cseq_ST_st4_fsm_3) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        lb_val_1_address0 = lb_val_1_addr_reg_1001;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2)) begin
        lb_val_1_address0 = tmp_15_i_i_fu_533_p1;
    end else begin
        lb_val_1_address0 = 'bx;
    end
end

always @ (ap_sig_cseq_ST_st3_fsm_2 or ap_sig_cseq_ST_st4_fsm_3 or ap_sig_bdd_352) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2) | ((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3) & ~ap_sig_bdd_352))) begin
        lb_val_1_ce0 = ap_const_logic_1;
    end else begin
        lb_val_1_ce0 = ap_const_logic_0;
    end
end

always @ (tmp_14_i_i_reg_982 or ap_sig_cseq_ST_st4_fsm_3 or ap_sig_bdd_352) begin
    if ((~(ap_const_lv1_0 == tmp_14_i_i_reg_982) & (ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3) & ~ap_sig_bdd_352)) begin
        lb_val_1_we0 = ap_const_logic_1;
    end else begin
        lb_val_1_we0 = ap_const_logic_0;
    end
end

always @ (tmp_15_i_i_reg_991 or ap_sig_cseq_ST_st5_fsm_4 or ap_sig_cseq_ST_st4_fsm_3 or tmp_28_i_i_fu_558_p1) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        lb_val_2_address0 = tmp_15_i_i_reg_991;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st5_fsm_4)) begin
        lb_val_2_address0 = tmp_28_i_i_fu_558_p1;
    end else begin
        lb_val_2_address0 = 'bx;
    end
end

always @ (ap_sig_cseq_ST_st5_fsm_4 or ap_sig_cseq_ST_st4_fsm_3 or ap_sig_bdd_352) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st5_fsm_4) | ((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3) & ~ap_sig_bdd_352))) begin
        lb_val_2_ce0 = ap_const_logic_1;
    end else begin
        lb_val_2_ce0 = ap_const_logic_0;
    end
end

always @ (tmp_14_i_i_reg_982 or ap_sig_cseq_ST_st4_fsm_3 or ap_sig_bdd_352) begin
    if ((~(ap_const_lv1_0 == tmp_14_i_i_reg_982) & (ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3) & ~ap_sig_bdd_352)) begin
        lb_val_2_we0 = ap_const_logic_1;
    end else begin
        lb_val_2_we0 = ap_const_logic_0;
    end
end

always @ (or_cond3_i_i_reg_1063 or ap_sig_cseq_ST_st14_fsm_13 or ap_sig_bdd_293) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st14_fsm_13) & (ap_const_lv1_0 == or_cond3_i_i_reg_1063) & ~ap_sig_bdd_293)) begin
        p_dst_data_stream_V_write = ap_const_logic_1;
    end else begin
        p_dst_data_stream_V_write = ap_const_logic_0;
    end
end

always @ (ap_sig_cseq_ST_st4_fsm_3 or brmerge_demorgan_i_i_fu_544_p2 or ap_sig_bdd_352) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3) & ~(ap_const_lv1_0 == brmerge_demorgan_i_i_fu_544_p2) & ~ap_sig_bdd_352)) begin
        p_src_data_stream_V_read = ap_const_logic_1;
    end else begin
        p_src_data_stream_V_read = ap_const_logic_0;
    end
end

always @ (ap_sig_cseq_ST_st1_fsm_0 or ap_sig_bdd_75) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~ap_sig_bdd_75)) begin
        threashold_read = ap_const_logic_1;
    end else begin
        threashold_read = ap_const_logic_0;
    end
end
always @ (ap_CS_fsm or ap_sig_bdd_75 or exitcond1_fu_473_p2 or exitcond_fu_517_p2 or or_cond2_i_i_fu_612_p2 or or_cond2_i_i_reg_1041 or exitcond1_i_i_i_fu_629_p2 or exitcond_i_i_i_fu_725_p2 or ap_sig_bdd_293 or ap_sig_bdd_352) begin
    case (ap_CS_fsm)
        ap_ST_st1_fsm_0 : 
        begin
            if (~ap_sig_bdd_75) begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end else begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end
        end
        ap_ST_st2_fsm_1 : 
        begin
            if (~(exitcond1_fu_473_p2 == ap_const_lv1_0)) begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end else begin
                ap_NS_fsm = ap_ST_st3_fsm_2;
            end
        end
        ap_ST_st3_fsm_2 : 
        begin
            if (~(ap_const_lv1_0 == exitcond_fu_517_p2)) begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end else begin
                ap_NS_fsm = ap_ST_st4_fsm_3;
            end
        end
        ap_ST_st4_fsm_3 : 
        begin
            if (~ap_sig_bdd_352) begin
                ap_NS_fsm = ap_ST_st5_fsm_4;
            end else begin
                ap_NS_fsm = ap_ST_st4_fsm_3;
            end
        end
        ap_ST_st5_fsm_4 : 
        begin
            ap_NS_fsm = ap_ST_st6_fsm_5;
        end
        ap_ST_st6_fsm_5 : 
        begin
            if ((ap_const_lv1_0 == or_cond2_i_i_fu_612_p2)) begin
                ap_NS_fsm = ap_ST_st11_fsm_10;
            end else begin
                ap_NS_fsm = ap_ST_st7_fsm_6;
            end
        end
        ap_ST_st7_fsm_6 : 
        begin
            ap_NS_fsm = ap_ST_st8_fsm_7;
        end
        ap_ST_st8_fsm_7 : 
        begin
            ap_NS_fsm = ap_ST_st9_fsm_8;
        end
        ap_ST_st9_fsm_8 : 
        begin
            ap_NS_fsm = ap_ST_st10_fsm_9;
        end
        ap_ST_st10_fsm_9 : 
        begin
            ap_NS_fsm = ap_ST_st11_fsm_10;
        end
        ap_ST_st11_fsm_10 : 
        begin
            if (((ap_const_lv1_0 == or_cond2_i_i_reg_1041) | ~(ap_const_lv1_0 == exitcond1_i_i_i_fu_629_p2))) begin
                ap_NS_fsm = ap_ST_st14_fsm_13;
            end else begin
                ap_NS_fsm = ap_ST_st12_fsm_11;
            end
        end
        ap_ST_st12_fsm_11 : 
        begin
            if (~(ap_const_lv1_0 == exitcond_i_i_i_fu_725_p2)) begin
                ap_NS_fsm = ap_ST_st11_fsm_10;
            end else begin
                ap_NS_fsm = ap_ST_st13_fsm_12;
            end
        end
        ap_ST_st13_fsm_12 : 
        begin
            ap_NS_fsm = ap_ST_st12_fsm_11;
        end
        ap_ST_st14_fsm_13 : 
        begin
            if (~ap_sig_bdd_293) begin
                ap_NS_fsm = ap_ST_st3_fsm_2;
            end else begin
                ap_NS_fsm = ap_ST_st14_fsm_13;
            end
        end
        default : 
        begin
            ap_NS_fsm = 'bx;
        end
    endcase
end


assign Gx_address0 = tmp_11_cast_fu_746_p1;

assign Gy_address0 = tmp_11_cast_fu_746_p1;

assign abs1_i_i_i_fu_695_p3 = ((abscond1_i_i_i_fu_689_p2[0:0] === 1'b1) ? y_dir_i_i_i_reg_373 : neg1_i_i_i_fu_683_p2);

assign abs_i_i_i_fu_675_p3 = ((abscond_i_i_i_fu_669_p2[0:0] === 1'b1) ? x_dir_i_i_i_reg_385 : neg_i_i_i_fu_663_p2);

assign abscond1_i_i_i_fu_689_p2 = ($signed(y_dir_i_i_i_reg_373) > $signed(32'b00000000000000000000000000000000)? 1'b1: 1'b0);

assign abscond_i_i_i_fu_669_p2 = ($signed(x_dir_i_i_i_reg_385) > $signed(32'b00000000000000000000000000000000)? 1'b1: 1'b0);


always @ (ap_CS_fsm) begin
    ap_sig_bdd_111 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_1]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_130 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_2]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_154 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_4]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_166 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_5]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_185 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_A]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_212 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_B]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_230 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_C]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_288 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_D]);
end


always @ (p_dst_data_stream_V_full_n or or_cond3_i_i_reg_1063) begin
    ap_sig_bdd_293 = ((p_dst_data_stream_V_full_n == ap_const_logic_0) & (ap_const_lv1_0 == or_cond3_i_i_reg_1063));
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_306 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_9]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_33 = (ap_CS_fsm[ap_const_lv32_0] == ap_const_lv1_1);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_337 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_3]);
end


always @ (p_src_data_stream_V_empty_n or brmerge_demorgan_i_i_fu_544_p2) begin
    ap_sig_bdd_352 = (~(ap_const_lv1_0 == brmerge_demorgan_i_i_fu_544_p2) & (p_src_data_stream_V_empty_n == ap_const_logic_0));
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_381 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_6]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_394 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_7]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_417 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_8]);
end


always @ (ap_start or ap_done_reg or threashold_empty_n) begin
    ap_sig_bdd_75 = ((threashold_empty_n == ap_const_logic_0) | (ap_start == ap_const_logic_0) | (ap_done_reg == ap_const_logic_1));
end

assign brmerge_demorgan_i_i_fu_544_p2 = (tmp_8_i_i_reg_959 & tmp_14_i_i_reg_982);

assign colOffset_fu_731_p2 = (col_assign_reg_421 + ap_const_lv2_1);

assign data_val_assign_addr_1_gep_fu_187_p3 = ap_const_lv64_1;

assign data_val_assign_addr_2_gep_fu_195_p3 = ap_const_lv64_2;

assign data_val_assign_addr_3_gep_fu_203_p3 = ap_const_lv64_3;

assign data_val_assign_addr_4_gep_fu_211_p3 = ap_const_lv64_4;

assign data_val_assign_addr_5_gep_fu_219_p3 = ap_const_lv64_5;

assign data_val_assign_addr_6_gep_fu_227_p3 = ap_const_lv64_6;

assign data_val_assign_addr_7_gep_fu_235_p3 = ap_const_lv64_7;

assign data_val_assign_addr_8_gep_fu_243_p3 = ap_const_lv64_8;

assign data_val_assign_addr_gep_fu_179_p3 = ap_const_lv64_0;

assign exitcond1_fu_473_p2 = (p_i_i_reg_339 == tmp_7_fu_467_p2? 1'b1: 1'b0);

assign exitcond1_i_i_i_fu_629_p2 = (row_assign_reg_362 == ap_const_lv2_3? 1'b1: 1'b0);

assign exitcond_fu_517_p2 = (p_3_i_i_reg_350 == tmp_4_fu_457_p2? 1'b1: 1'b0);

assign exitcond_i_i_i_fu_725_p2 = (col_assign_reg_421 == ap_const_lv2_3? 1'b1: 1'b0);

assign icmp1_fu_601_p2 = (tmp_13_fu_591_p4 != ap_const_lv8_0? 1'b1: 1'b0);

assign icmp_fu_499_p2 = (tmp_5_fu_489_p4 != ap_const_lv8_0? 1'b1: 1'b0);

assign lb_val_0_d0 = p_src_data_stream_V_dout;

assign lb_val_1_d0 = lb_val_0_q0;

assign lb_val_2_d0 = lb_val_1_q0;

assign neg1_i_i_i_fu_683_p2 = (ap_const_lv32_0 - y_dir_i_i_i_reg_373);

assign neg_i_i_i_fu_663_p2 = (ap_const_lv32_0 - x_dir_i_i_i_reg_385);

assign or_cond2_i_i_fu_612_p2 = (tmp1_fu_607_p2 & tmp_reg_969);

assign or_cond3_i_i_fu_720_p2 = (tmp_10_i_i_reg_964 | tmp_30_i_i_fu_714_p2);

assign p_V_fu_522_p2 = (p_3_i_i_reg_350 + ap_const_lv9_1);

assign p_dst_data_stream_V_din = ((tmp_8_reg_432[0:0] === 1'b1) ? ap_const_lv8_FF : ap_const_lv8_0);

assign p_shl_cast_fu_653_p1 = tmp_9_fu_645_p3;

assign q_V_fu_478_p2 = (p_i_i_reg_339 + ap_const_lv9_1);

assign rowOffset_fu_635_p2 = (row_assign_reg_362 + ap_const_lv2_1);

assign sw_val_0_0_1_fu_583_p3 = ((tmp_14_i_i_reg_982[0:0] === 1'b1) ? sw_val_0_0_fu_104 : sw_val_0_1_fu_108);

assign sw_val_1_0_1_fu_576_p3 = ((tmp_14_i_i_reg_982[0:0] === 1'b1) ? sw_val_1_0_fu_100 : sw_val_1_1_fu_116);

assign sw_val_2_0_1_fu_569_p3 = ((tmp_14_i_i_reg_982[0:0] === 1'b1) ? lb_val_2_q0 : sw_val_2_1_fu_124);

assign tmp1_fu_607_p2 = (icmp1_fu_601_p2 & tmp_14_i_i_reg_982);

assign tmp_10_i_i_fu_505_p2 = (p_i_i_reg_339 == ap_const_lv9_0? 1'b1: 1'b0);

assign tmp_11_cast_fu_746_p1 = $signed(tmp_1_fu_741_p2);

assign tmp_13_fu_591_p4 = {{p_3_i_i_reg_350[ap_const_lv32_8 : ap_const_lv32_1]}};

assign tmp_14_i_i_fu_528_p2 = (p_3_i_i_reg_350 < tmp_3_fu_453_p1? 1'b1: 1'b0);

assign tmp_15_i_i_fu_533_p1 = p_3_i_i_reg_350;

assign tmp_18_i_i_fu_548_p1 = p_3_i_i_reg_350;

assign tmp_1_fu_741_p2 = (tmp_s_reg_1053 + tmp_3_i_i_i_cast_fu_737_p1);

assign tmp_28_i_i_fu_558_p1 = p_3_i_i_reg_350;

assign tmp_30_i_i_fu_714_p2 = (p_3_i_i_reg_350 == ap_const_lv9_0? 1'b1: 1'b0);

assign tmp_3_fu_453_p1 = width;

assign tmp_3_i_i_i_cast_fu_737_p1 = col_assign_reg_421;

assign tmp_4_fu_457_p2 = (tmp_3_fu_453_p1 + ap_const_lv9_1);

assign tmp_4_i_i_i_cast_fu_753_p1 = data_val_assign_q1;

assign tmp_5_fu_489_p4 = {{p_i_i_reg_339[ap_const_lv32_8 : ap_const_lv32_1]}};

assign tmp_5_i_i_i_cast_fu_767_p1 = $signed(tmp_5_i_i_i_fu_761_p2);

assign tmp_5_i_i_i_fu_761_p0 = tmp_4_i_i_i_cast_fu_753_p1;

assign tmp_5_i_i_i_fu_761_p1 = Gx_q0;

assign tmp_5_i_i_i_fu_761_p2 = ($signed({{1'b0}, {tmp_5_i_i_i_fu_761_p0}}) * $signed(tmp_5_i_i_i_fu_761_p1));

assign tmp_6_fu_463_p1 = height;

assign tmp_6_i_i_i_cast_fu_787_p1 = $signed(tmp_6_i_i_i_fu_781_p2);

assign tmp_6_i_i_i_fu_781_p0 = tmp_4_i_i_i_cast_fu_753_p1;

assign tmp_6_i_i_i_fu_781_p1 = Gy_q0;

assign tmp_6_i_i_i_fu_781_p2 = ($signed({{1'b0}, {tmp_6_i_i_i_fu_781_p0}}) * $signed(tmp_6_i_i_i_fu_781_p1));

assign tmp_7_fu_467_p2 = (tmp_6_fu_463_p1 + ap_const_lv9_1);

assign tmp_8_i_i_fu_484_p2 = (p_i_i_reg_339 < tmp_6_fu_463_p1? 1'b1: 1'b0);

assign tmp_9_fu_645_p3 = {{row_assign_reg_362}, {ap_const_lv2_0}};

assign tmp_fu_511_p2 = (icmp_fu_499_p2 & tmp_8_i_i_fu_484_p2);

assign tmp_i_i_i_cast_fu_641_p1 = row_assign_reg_362;

assign tmp_i_i_i_fu_709_p2 = ($signed(val_fu_703_p2) > $signed(threashold_read_reg_926)? 1'b1: 1'b0);

assign tmp_s_fu_657_p2 = (p_shl_cast_fu_653_p1 - tmp_i_i_i_cast_fu_641_p1);

assign val_fu_703_p2 = (abs_i_i_i_fu_675_p3 + abs1_i_i_i_fu_695_p3);

assign x_dir_fu_771_p2 = ($signed(x_dir_1_i_i_i_reg_409) + $signed(tmp_5_i_i_i_cast_fu_767_p1));

assign y_dir_fu_791_p2 = ($signed(y_dir_1_i_i_i_reg_397) + $signed(tmp_6_i_i_i_cast_fu_787_p1));
always @ (posedge ap_clk) begin
    data_val_assign_addr_reg_881[3:0] <= 4'b0000;
    data_val_assign_addr_1_reg_886[3:0] <= 4'b0001;
    data_val_assign_addr_2_reg_891[3:0] <= 4'b0010;
    data_val_assign_addr_3_reg_896[3:0] <= 4'b0011;
    data_val_assign_addr_4_reg_901[3:0] <= 4'b0100;
    data_val_assign_addr_5_reg_906[3:0] <= 4'b0101;
    data_val_assign_addr_6_reg_911[3:0] <= 4'b0110;
    data_val_assign_addr_7_reg_916[3:0] <= 4'b0111;
    data_val_assign_addr_8_reg_921[3:0] <= 4'b1000;
    tmp_15_i_i_reg_991[63:9] <= 55'b0000000000000000000000000000000000000000000000000000000;
end



endmodule //EdgeDetect_Top_ImgProcess_0_0_128_128_s

